var searchIndex = JSON.parse('{\
"bare_metal":{"doc":"Abstractions common to bare metal systems.","t":[3,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11],"n":["CriticalSection","Mutex","borrow","borrow","borrow","borrow_mut","borrow_mut","clone","fmt","fmt","from","from","get_mut","into","into","into_inner","new","new","try_from","try_from","try_into","try_into","type_id","type_id"],"q":["bare_metal","","","","","","","","","","","","","","","","","","","","","","",""],"d":["Critical section token.","A “mutex” based on critical sections.","","","Borrows the data for the duration of the critical section.","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Gets a mutable reference to the contained value when the …","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Unwraps the contained value, consuming the mutex.","Creates a critical section token.","Creates a new mutex.","","","","","",""],"i":[0,0,2,1,1,2,1,2,2,1,2,1,1,2,1,1,2,1,2,1,2,1,2,1],"f":[0,0,[[]],[[]],[[1,2]],[[]],[[]],[2,2],[[2,3],4],[[[1,[5]],3],4],[[]],[[]],[1],[[]],[[]],[1],[[],2],[[],1],[[],6],[[],6],[[],6],[[],6],[[],7],[[],7]],"p":[[3,"Mutex"],[3,"CriticalSection"],[3,"Formatter"],[6,"Result"],[8,"Debug"],[4,"Result"],[3,"TypeId"]]},\
"bit_field":{"doc":"Provides the abstraction of a bit field, which allows for …","t":[18,8,8,10,10,10,10,10,10,10,10,10],"n":["BIT_LENGTH","BitArray","BitField","bit_length","get_bit","get_bit","get_bits","get_bits","set_bit","set_bit","set_bits","set_bits"],"q":["bit_field","","","","","","","","","","",""],"d":["The number of bits in this bit field.","","A generic trait which provides methods for extracting and …","Returns the length, eg number of bits, in this bit array.","Obtains the bit at the index <code>bit</code>; note that index 0 is the …","Obtains the bit at the index <code>bit</code>; note that index 0 is the …","Obtains the range of bits specified by <code>range</code>; note that …","Obtains the range of bits specified by <code>range</code>; note that …","Sets the bit at the index <code>bit</code> to the value <code>value</code> (where …","Sets the bit at the index <code>bit</code> to the value <code>value</code> (where …","Sets the range of bits defined by the range <code>range</code> to the …","Sets the range of bits defined by the range <code>range</code> to the …"],"i":[4,0,0,5,4,5,4,5,4,5,4,5],"f":[0,0,0,[[],1],[1,2],[1,2],[[[3,[1]]]],[[[3,[1]]]],[[1,2]],[[1,2]],[[[3,[1]]]],[[[3,[1]]]]],"p":[[15,"usize"],[15,"bool"],[8,"RangeBounds"],[8,"BitField"],[8,"BitArray"]]},\
"embedded_hal":{"doc":"A Hardware Abstraction Layer (HAL) for embedded systems","t":[16,8,0,0,0,0,10,10,0,10,10,0,0,10,0,0,0,0,0,0,0,0,0,8,16,16,10,10,8,8,10,10,8,16,16,16,16,16,16,16,4,8,13,6,6,8,8,8,13,8,8,8,11,11,11,10,10,11,11,11,10,11,11,11,10,10,10,10,16,8,10,10,0,8,16,16,16,4,8,8,13,8,13,11,11,11,10,11,11,11,0,10,11,11,11,0,10,8,8,13,13,13,8,4,13,3,13,8,4,18,18,13,13,13,3,13,18,18,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,10,10,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,10,11,11,11,11,11,10,10,11,10,11,0,10,11,11,10,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,8,16,16,10,10,0,0,0,0,8,10,10,3,11,11,11,11,11,11,11,11,11,11,11,11,11,16,13,13,8,4,11,11,11,11,11,11,11,11,11,10,10,11,11,11,11,2,2,2,2,2,2,2,2,2,2,2,2,2,2,16,16,8,8,10,10,10,11,13,13,16,8,13,13,17,17,17,17,3,4,4,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,10,10,11,11,11,11,11,11,11,11,11,8,8,16,8,16,10,10,10],"n":["Duty","PwmPin","adc","blocking","can","digital","disable","enable","fmt","get_duty","get_max_duty","prelude","serial","set_duty","spi","timer","watchdog","can","delay","i2c","rng","serial","spi","Can","Error","Frame","receive","transmit","DelayMs","DelayUs","delay_ms","delay_us","AddressMode","Error","Error","Error","Error","Error","Error","Error","Operation","Read","Read","SevenBitAddress","TenBitAddress","Transactional","TransactionalIter","Write","Write","WriteIter","WriteIterRead","WriteRead","borrow","borrow_mut","eq","exec","exec_iter","fmt","from","into","read","try_from","try_into","type_id","write","write","write_iter_read","write_read","Error","Write","bflush","bwrite_all","write","Default","Error","Error","Error","Operation","Transactional","Transfer","Transfer","Write","Write","borrow","borrow_mut","eq","exec","fmt","from","into","transfer","transfer","try_from","try_into","type_id","write","write","Default","Default","Acknowledge","Bit","Crc","Error","ErrorKind","Extended","ExtendedId","Form","Frame","Id","MAX","MAX","Other","Overrun","Standard","StandardId","Stuff","ZERO","ZERO","as_raw","as_raw","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","cmp","data","dlc","eq","eq","eq","eq","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","hash","id","into","into","into","into","is_data_frame","is_extended","is_remote_frame","is_standard","kind","kind","nb","new","new","new","new_remote","new_unchecked","new_unchecked","partial_cmp","standard_id","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","Can","Error","Frame","receive","transmit","v1","v1_compat","v2","v2_compat","OutputPin","set_high","set_low","OldOutputPin","borrow","borrow_mut","from","from","into","new","set_high","set_high","set_low","set_low","try_from","try_into","type_id","Error","High","Low","OutputPin","PinState","borrow","borrow_mut","clone","eq","fmt","from","from","into","not","set_high","set_low","set_state","try_from","try_into","type_id","_embedded_hal_PwmPin","_embedded_hal_blocking_delay_DelayMs","_embedded_hal_blocking_delay_DelayUs","_embedded_hal_blocking_i2c_Read","_embedded_hal_blocking_i2c_Write","_embedded_hal_blocking_i2c_WriteRead","_embedded_hal_blocking_serial_Write","_embedded_hal_blocking_spi_Transfer","_embedded_hal_blocking_spi_Write","_embedded_hal_digital_OutputPin","_embedded_hal_serial_Read","_embedded_hal_serial_Write","_embedded_hal_spi_FullDuplex","_embedded_hal_timer_CountDown","Error","Error","Read","Write","flush","read","write","write_str","CaptureOnFirstTransition","CaptureOnSecondTransition","Error","FullDuplex","IdleHigh","IdleLow","MODE_0","MODE_1","MODE_2","MODE_3","Mode","Phase","Polarity","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","eq","eq","eq","from","from","from","into","into","into","phase","polarity","read","send","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","Cancel","CountDown","Error","Periodic","Time","cancel","start","wait"],"q":["embedded_hal","","","","","","","","","","","","","","","","","embedded_hal::blocking","","","","","","embedded_hal::blocking::can","","","","","embedded_hal::blocking::delay","","","","embedded_hal::blocking::i2c","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","embedded_hal::blocking::serial","","","","","embedded_hal::blocking::serial::write","embedded_hal::blocking::spi","","","","","","","","","","","","","","","","","","","","","","","embedded_hal::blocking::spi::transfer","embedded_hal::blocking::spi::write","embedded_hal::can","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","embedded_hal::can::nb","","","","","embedded_hal::digital","","","","embedded_hal::digital::v1","","","embedded_hal::digital::v1_compat","","","","","","","","","","","","","","embedded_hal::digital::v2","","","","","","","","","","","","","","","","","","","","embedded_hal::prelude","","","","","","","","","","","","","","embedded_hal::serial","","","","","","","","embedded_hal::spi","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","embedded_hal::timer","","","","","","",""],"d":["Type for the <code>duty</code> methods","A single PWM channel / pin","Analog-digital conversion traits","Blocking API","Controller Area Network","Digital I/O","Disables a PWM <code>channel</code>","Enables a PWM <code>channel</code>","Implementation of <code>core::fmt::Write</code> for the HAL’s …","Returns the current duty cycle","Returns the maximum duty cycle value","The prelude is a collection of all the traits in this crate","Serial interface","Sets a new duty cycle","Serial Peripheral Interface","Timers","Traits for interactions with a processors watchdog timer.","Blocking CAN API","Delays","Blocking I2C API","Blocking hardware random number generator","Blocking serial API","Blocking SPI API","A blocking CAN interface that is able to transmit and …","Associated error type.","Associated frame type.","Blocks until a frame was received or an error occured.","Puts a frame in the transmit buffer. Blocks until space is …","Millisecond delay","Microsecond delay","Pauses execution for <code>ms</code> milliseconds","Pauses execution for <code>us</code> microseconds","Address mode (7-bit / 10-bit)","Error type","Error type","Error type","Error type","Error type","Error type","Error type","Transactional I2C operation.","Blocking read","Read data into the provided buffer","7-bit address mode type","10-bit address mode type","Transactional I2C interface.","Transactional I2C interface (iterator version).","Blocking write","Write data from the provided buffer","Blocking write (iterator version)","Blocking write (iterator version) + read","Blocking write + read","","","","Execute the provided operations on the I2C bus.","Execute the provided operations on the I2C bus (iterator …","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Reads enough bytes from slave with <code>address</code> to fill <code>buffer</code>","","","","Writes bytes to slave with address <code>address</code>","Writes bytes to slave with address <code>address</code>","Writes bytes to slave with address <code>address</code> and then reads …","Writes bytes to slave with address <code>address</code> and then reads …","The type of error that can occur when writing","Write half of a serial interface (blocking variant)","Block until the serial interface has sent all buffered …","Writes a slice, blocking until everything has been written","Blocking serial write","Marker trait to opt into default blocking write …","Error type","Error type","Associated error type","Operation for transactional SPI trait","Transactional trait allows multiple actions to be executed …","Blocking transfer","Write data out while reading data into the provided buffer","Blocking write","Write data from the provided buffer, discarding read data","","","","Execute the provided transactions","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Blocking transfer","Sends <code>words</code> to the slave. Returns the <code>words</code> received from …","","","","Blocking write","Sends <code>words</code> to the slave, ignoring all the incoming words","Default implementation of <code>blocking::spi::Transfer&lt;W&gt;</code> for …","Default implementation of <code>blocking::spi::Write&lt;W&gt;</code> for …","An ACK  error shall be detected by a transmitter whenever …","A bit error is detected at that bit time when the bit …","Calculated CRC sequence does not equal the received one.","CAN error","CAN error kind","Extended 29-bit Identifier (<code>0..=0x1FFF_FFFF</code>).","Extended 29-bit CAN Identifier (<code>0..=1FFF_FFFF</code>).","A form error shall be detected when a fixed-form bit field …","A CAN2.0 Frame","A CAN Identifier (standard or extended).","CAN ID <code>0x7FF</code>, the lowest priority.","CAN ID <code>0x1FFFFFFF</code>, the lowest priority.","A different error occurred. The original error may contain …","The peripheral receive buffer was overrun.","Standard 11-bit Identifier (<code>0..=0x7FF</code>).","Standard 11-bit CAN Identifier (<code>0..=0x7FF</code>).","A stuff error is detected at the bit time of the sixth …","CAN ID <code>0</code>, the highest priority.","CAN ID <code>0</code>, the highest priority.","Returns this CAN Identifier as a raw 16-bit integer.","Returns this CAN Identifier as a raw 32-bit integer.","","","","","","","","","","","","","","Returns the frame data (0..8 bytes in length).","Returns the data length code (DLC) which is in the range …","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the frame identifier.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Returns true if this frame is a data frame.","Returns true if this frame is a extended frame.","Returns true if this frame is a remote frame.","Returns true if this frame is a standard frame.","Convert error to a generic CAN error kind","","Non-blocking CAN API","Creates a new frame.","Tries to create a <code>StandardId</code> from a raw 16-bit integer.","Tries to create a <code>ExtendedId</code> from a raw 32-bit integer.","Creates a new remote frame (RTR bit set).","Creates a new <code>StandardId</code> without checking if it is inside …","Creates a new <code>ExtendedId</code> without checking if it is inside …","","Returns the Base ID part of this extended identifier.","","","","","","","","","","","","","A CAN interface that is able to transmit and receive …","Associated error type.","Associated frame type.","Returns a received frame if available.","Puts a frame in the transmit buffer to be sent on the bus.","Digital I/O","v1 compatibility wrappers","Digital I/O","v2 compatibility shims","Single digital push-pull output pin","Drives the pin high","Drives the pin low","Wrapper to allow fallible <code>v2::OutputPin</code> traits to be …","","","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","Create a new OldOutputPin wrapper around a <code>v2::OutputPin</code>","","","","","","","","Error type","High pin state","Low pin state","Single digital push-pull output pin","Digital output pin state","","","","","","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","","Drives the pin high","Drives the pin low","Drives the pin high or low depending on the provided value","","","","","","","","","","","","","","","","","","Read error","Write error","Read half of a serial interface","Write half of a serial interface","Ensures that none of the previously written words are …","Reads a single word from the serial interface","Writes a single word to the serial interface","","Data in “captured” on the first clock transition","Data in “captured” on the second clock transition","An enumeration of SPI errors","Full duplex (master mode)","Clock signal high when idle","Clock signal low when idle","Helper for CPOL = 0, CPHA = 0","Helper for CPOL = 0, CPHA = 1","Helper for CPOL = 1, CPHA = 0","Helper for CPOL = 1, CPHA = 1","SPI mode","Clock phase","Clock polarity","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Clock phase","Clock polarity","Reads the word stored in the shift register","Sends a word to the slave","","","","","","","","","","Trait for cancelable countdowns.","A count down timer","Error returned when a countdown can’t be canceled.","Marker trait that indicates that a timer is periodic","The unit of time used by this timer","Tries to cancel this countdown.","Starts a new count down","Non-blockingly “waits” until the count down finishes"],"i":[29,0,0,0,0,0,29,29,0,29,29,0,0,29,0,0,0,0,0,0,0,0,0,0,30,30,30,30,0,0,31,32,0,33,34,35,36,37,38,39,0,0,2,0,0,0,0,0,2,0,0,0,2,2,2,38,39,2,2,2,33,2,2,2,34,35,37,36,40,0,40,40,0,0,41,42,43,0,0,0,8,0,8,8,8,8,43,8,8,8,0,41,8,8,8,0,42,0,0,15,15,15,0,0,14,0,15,0,0,10,12,15,15,14,0,15,10,12,10,12,10,12,14,15,10,12,14,15,10,12,14,15,15,44,44,10,12,14,15,10,12,14,15,15,10,12,14,14,14,15,15,44,10,12,14,15,44,44,44,44,45,15,0,44,10,12,44,10,12,15,12,10,12,14,15,10,12,14,15,10,12,14,15,0,46,46,46,46,0,0,0,0,0,47,47,0,21,21,21,21,21,21,21,21,21,21,21,21,21,48,22,22,0,0,22,22,22,22,22,22,22,22,22,48,48,48,22,22,22,0,0,0,0,0,0,0,0,0,0,0,0,0,0,49,23,0,0,23,49,23,23,26,26,50,0,25,25,0,0,0,0,0,0,0,25,26,27,25,26,27,25,26,27,25,26,27,25,26,27,25,26,27,27,27,50,50,25,26,27,25,26,27,25,26,27,0,0,51,0,52,51,52,52],"f":[0,0,0,0,0,0,[[]],[[]],0,[[]],[[]],0,0,[[]],0,0,0,0,0,0,0,0,0,0,0,0,[[],1],[[],1],0,0,[[]],[[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[]],[[]],[[2,2],3],[[],1],[[],1],[[2,4],5],[[]],[[]],[[],1],[[],1],[[],1],[[],6],[[],1],[[],1],[[],1],[[],1],0,0,[[],1],[[],1],0,0,0,0,0,0,0,0,0,0,0,[[]],[[]],[[[8,[7]],8],3],[[],1],[[[8,[9]],4],5],[[]],[[]],0,[[],1],[[],1],[[],1],[[],6],0,[[],1],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[10,11],[12,13],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[10,10],[12,12],[14,14],[15,15],[[15,15],16],[[]],[[],17],[[10,10],3],[[12,12],3],[[14,14],3],[[15,15],3],[[10,4],5],[[12,4],5],[[14,4],5],[[15,4],5],[[15,4],5],[[]],[[]],[10,14],[12,14],[[]],[[]],[15],[[],14],[[]],[[]],[[]],[[]],[[],3],[[],3],[[],3],[[],3],[[],15],[15,15],0,[[[18,[14]]],19],[11,[[19,[10]]]],[13,[[19,[12]]]],[[[18,[14]],17],19],[11,10],[13,12],[[15,15],[[19,[16]]]],[12,10],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],6],[[],6],[[],6],[[],6],0,0,0,[[],20],[[],[[20,[19]]]],0,0,0,0,0,[[]],[[]],0,[[]],[[]],[[]],[[],21],[[]],[[],21],[[],1],[21],[21],[[],1],[[],1],[[],1],[[],6],0,0,0,0,0,[[]],[[]],[22,22],[[22,22],3],[[22,4],5],[[]],[3,22],[[]],[22],[[],1],[[],1],[22,1],[[],1],[[],1],[[],6],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[],20],[[],20],[[],20],[[23,24],5],0,0,0,0,0,0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[25,25],[26,26],[27,27],[[25,25],3],[[26,26],3],[[27,27],3],[[]],[[]],[[]],[[]],[[]],[[]],0,0,[[],20],[[],20],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],6],[[],6],[[],6],0,0,0,0,0,[[],1],[[]],[[],[[20,[28]]]]],"p":[[4,"Result"],[4,"Operation"],[15,"bool"],[3,"Formatter"],[6,"Result"],[3,"TypeId"],[8,"PartialEq"],[4,"Operation"],[8,"Debug"],[3,"StandardId"],[15,"u16"],[3,"ExtendedId"],[15,"u32"],[4,"Id"],[4,"ErrorKind"],[4,"Ordering"],[15,"usize"],[8,"Into"],[4,"Option"],[6,"Result"],[3,"OldOutputPin"],[4,"PinState"],[8,"Write"],[15,"str"],[4,"Polarity"],[4,"Phase"],[3,"Mode"],[4,"Void"],[8,"PwmPin"],[8,"Can"],[8,"DelayMs"],[8,"DelayUs"],[8,"Read"],[8,"Write"],[8,"WriteIter"],[8,"WriteRead"],[8,"WriteIterRead"],[8,"Transactional"],[8,"TransactionalIter"],[8,"Write"],[8,"Transfer"],[8,"Write"],[8,"Transactional"],[8,"Frame"],[8,"Error"],[8,"Can"],[8,"OutputPin"],[8,"OutputPin"],[8,"Read"],[8,"FullDuplex"],[8,"Cancel"],[8,"CountDown"]]},\
"lock_api":{"doc":"This library provides type-safe and fully-featured <code>Mutex</code> …","t":[16,16,8,16,16,3,3,18,18,18,18,16,16,3,3,3,3,3,3,8,8,8,3,8,8,8,8,8,8,8,8,8,8,3,3,3,3,3,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,10,11,11,10,11,10,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,10,11,11,11,10,10,10,10,11,11,11,11,11,11,11,11,11,11,11,11,10,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,10,11,11,11,10,10,10,10,11,11,11,10,10,10,10,10,10,10,11,11,11,10,10,10,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,10,11,10,11,10,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,10,11,10,10,10,11,11,11,11,11,11,11,11,11,11,10,10,10,10,11,11,11,11,11,11,11,11,11,11,11,10,11,11],"n":["Duration","Duration","GetThreadId","GuardMarker","GuardMarker","GuardNoSend","GuardSend","INIT","INIT","INIT","INIT","Instant","Instant","MappedMutexGuard","MappedReentrantMutexGuard","MappedRwLockReadGuard","MappedRwLockWriteGuard","Mutex","MutexGuard","RawMutex","RawMutexFair","RawMutexTimed","RawReentrantMutex","RawRwLock","RawRwLockDowngrade","RawRwLockFair","RawRwLockRecursive","RawRwLockRecursiveTimed","RawRwLockTimed","RawRwLockUpgrade","RawRwLockUpgradeDowngrade","RawRwLockUpgradeFair","RawRwLockUpgradeTimed","ReentrantMutex","ReentrantMutexGuard","RwLock","RwLockReadGuard","RwLockUpgradableReadGuard","RwLockWriteGuard","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","bump","bump","bump","bump","bump","bump","bump","bump","bump_exclusive","bump_exclusive","bump_shared","bump_shared","bump_upgradable","bump_upgradable","const_new","const_new","const_new","data_ptr","data_ptr","data_ptr","default","default","default","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","downgrade","downgrade","downgrade","downgrade_to_upgradable","downgrade_to_upgradable","downgrade_upgradable","drop","drop","drop","drop","drop","drop","drop","drop","drop","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","force_unlock","force_unlock","force_unlock_fair","force_unlock_fair","force_unlock_read","force_unlock_read_fair","force_unlock_write","force_unlock_write_fair","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","get_mut","get_mut","get_mut","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into_inner","into_inner","into_inner","is_locked","is_locked","is_locked","is_locked","is_locked","is_locked","is_locked","is_locked","is_locked_exclusive","is_locked_exclusive","is_locked_exclusive","is_owned_by_current_thread","is_owned_by_current_thread","leak","lock","lock","lock","lock","lock_exclusive","lock_shared","lock_shared_recursive","lock_upgradable","map","map","map","map","map","map","map","map","mutex","new","new","new","nonzero_thread_id","raw","raw","raw","read","read_recursive","remutex","rwlock","rwlock","rwlock","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_lock","try_lock","try_lock","try_lock","try_lock_exclusive","try_lock_exclusive_for","try_lock_exclusive_until","try_lock_for","try_lock_for","try_lock_for","try_lock_for","try_lock_shared","try_lock_shared_for","try_lock_shared_recursive","try_lock_shared_recursive_for","try_lock_shared_recursive_until","try_lock_shared_until","try_lock_until","try_lock_until","try_lock_until","try_lock_until","try_lock_upgradable","try_lock_upgradable_for","try_lock_upgradable_until","try_map","try_map","try_map","try_map","try_map","try_map","try_map","try_map","try_read","try_read_for","try_read_recursive","try_read_recursive_for","try_read_recursive_until","try_read_until","try_upgradable_read","try_upgradable_read_for","try_upgradable_read_until","try_upgrade","try_upgrade","try_upgrade_for","try_upgrade_for","try_upgrade_until","try_upgrade_until","try_write","try_write_for","try_write_until","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","unlock","unlock","unlock_exclusive","unlock_exclusive_fair","unlock_fair","unlock_fair","unlock_fair","unlock_fair","unlock_fair","unlock_fair","unlock_fair","unlock_fair","unlock_fair","unlock_fair","unlock_fair","unlock_shared","unlock_shared_fair","unlock_upgradable","unlock_upgradable_fair","unlocked","unlocked","unlocked","unlocked","unlocked","unlocked_fair","unlocked_fair","unlocked_fair","unlocked_fair","unlocked_fair","upgradable_read","upgrade","upgrade","write"],"q":["lock_apid":["Duration type used for <code>try_lock_for</code>.","Duration type used for <code>try_lock_for</code>.","Helper trait which returns a non-zero thread ID.","Marker type which determines whether a lock guard should …","Marker type which determines whether a lock guard should …","Marker type which indicates that the Guard type for a lock …","Marker type which indicates that the Guard type for a lock …","Initial value for an unlocked mutex.","Initial value.","Initial value for an unlocked mutex.","Initial value for an unlocked <code>RwLock</code>.","Instant type used for <code>try_lock_until</code>.","Instant type used for <code>try_lock_until</code>.","An RAII mutex guard returned by <code>MutexGuard::map</code>, which can …","An RAII mutex guard returned by <code>ReentrantMutexGuard::map</code>, …","An RAII read lock guard returned by <code>RwLockReadGuard::map</code>, …","An RAII write lock guard returned by <code>RwLockWriteGuard::map</code>…","A mutual exclusion primitive useful for protecting shared …","An RAII implementation of a “scoped lock” of a mutex. …","Basic operations for a mutex.","Additional methods for mutexes which support fair …","Additional methods for mutexes which support locking with …","A raw mutex type that wraps another raw mutex to provide …","Basic operations for a reader-writer lock.","Additional methods for RwLocks which support atomically …","Additional methods for RwLocks which support fair …","Additional methods for RwLocks which support recursive …","Additional methods for RwLocks which support recursive …","Additional methods for RwLocks which support locking with …","Additional methods for RwLocks which support atomically …","Additional methods for RwLocks which support upgradable …","Additional methods for RwLocks which support upgradable …","Additional methods for RwLocks which support upgradable …","A mutex which can be recursively locked by a single thread.","An RAII implementation of a “scoped lock” of a …","A reader-writer lock","RAII structure used to release the shared read access of a …","RAII structure used to release the upgradable read access …","RAII structure used to release the exclusive write access …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Temporarily yields the mutex to a waiting thread if there …","Temporarily yields the mutex to a waiting thread if there …","Temporarily yields the mutex to a waiting thread if there …","Temporarily yields the mutex to a waiting thread if there …","Temporarily yields the mutex to a waiting thread if there …","Temporarily yields the <code>RwLock</code> to a waiting thread if there …","Temporarily yields the <code>RwLock</code> to a waiting thread if there …","Temporarily yields the <code>RwLock</code> to a waiting thread if there …","Temporarily yields an exclusive lock to a waiting thread …","Temporarily yields an exclusive lock to a waiting thread …","Temporarily yields a shared lock to a waiting thread if …","Temporarily yields a shared lock to a waiting thread if …","Temporarily yields an upgradable lock to a waiting thread …","Temporarily yields an upgradable lock to a waiting thread …","Creates a new mutex based on a pre-existing raw mutex.","Creates a new reentrant mutex based on a pre-existing raw …","Creates a new new instance of an <code>RwLock&lt;T&gt;</code> based on a …","Returns a raw pointer to the underlying data.","Returns a raw pointer to the underlying data.","Returns a raw pointer to the underlying data.","","","","","","","","","","","","","","","","","Atomically downgrades an exclusive lock into a shared lock …","Atomically downgrades a write lock into a read lock …","Atomically downgrades an upgradable read lock lock into a …","Downgrades an exclusive lock to an upgradable lock.","Atomically downgrades a write lock into an upgradable read …","Downgrades an upgradable lock to a shared lock.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Forcibly unlocks the mutex.","Forcibly unlocks the mutex.","Forcibly unlocks the mutex using a fair unlock procotol.","Forcibly unlocks the mutex using a fair unlock protocol.","Forcibly unlocks a read lock.","Forcibly unlocks a read lock using a fair unlock procotol.","Forcibly unlocks a write lock.","Forcibly unlocks a write lock using a fair unlock procotol.","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","Returns the argument unchanged.","Returns the argument unchanged.","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns a mutable reference to the underlying data.","Returns a mutable reference to the underlying data.","Returns a mutable reference to the underlying data.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Consumes this mutex, returning the underlying data.","Consumes this mutex, returning the underlying data.","Consumes this <code>RwLock</code>, returning the underlying data.","Checks whether the mutex is currently locked.","Checks whether the mutex is currently locked.","Checks whether the mutex is currently locked.","Checks whether the mutex is currently locked.","Checks whether the mutex is currently locked.","Checks if this <code>RwLock</code> is currently locked in any way.","Checks if this <code>RwLock</code> is currently locked in any way.","Checks whether this <code>RwLock</code> is currently locked in any way.","Check if this <code>RwLock</code> is currently exclusively locked.","Check if this <code>RwLock</code> is currently exclusively locked.","Check if this <code>RwLock</code> is currently exclusively locked.","Checks whether the mutex is currently held by the current …","Checks whether the mutex is currently held by the current …","Leaks the mutex guard and returns a mutable reference to …","Acquires this mutex, blocking the current thread until it …","Acquires a mutex, blocking the current thread until it is …","Acquires this mutex, blocking if it’s held by another …","Acquires a reentrant mutex, blocking the current thread …","Acquires an exclusive lock, blocking the current thread …","Acquires a shared lock, blocking the current thread until …","Acquires a shared lock without deadlocking in case of a …","Acquires an upgradable lock, blocking the current thread …","Makes a new <code>MappedMutexGuard</code> for a component of the locked …","Makes a new <code>MappedMutexGuard</code> for a component of the locked …","Makes a new <code>MappedReentrantMutexGuard</code> for a component of …","Makes a new <code>MappedReentrantMutexGuard</code> for a component of …","Make a new <code>MappedRwLockReadGuard</code> for a component of the …","Make a new <code>MappedRwLockWriteGuard</code> for a component of the …","Make a new <code>MappedRwLockReadGuard</code> for a component of the …","Make a new <code>MappedRwLockWriteGuard</code> for a component of the …","Returns a reference to the original <code>Mutex</code> object.","Creates a new mutex in an unlocked state ready for use.","Creates a new reentrant mutex in an unlocked state ready …","Creates a new instance of an <code>RwLock&lt;T&gt;</code> which is unlocked.","Returns a non-zero thread ID which identifies the current …","Returns the underlying raw mutex object.","Returns the underlying raw mutex object.","Returns the underlying raw reader-writer lock object.","Locks this <code>RwLock</code> with shared read access, blocking the …","Locks this <code>RwLock</code> with shared read access, blocking the …","Returns a reference to the original <code>ReentrantMutex</code> object.","Returns a reference to the original reader-writer lock …","Returns a reference to the original reader-writer lock …","Returns a reference to the original reader-writer lock …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Attempts to acquire this mutex without blocking. Returns …","Attempts to acquire this lock.","Attempts to acquire this mutex without blocking. Returns …","Attempts to acquire this lock.","Attempts to acquire an exclusive lock without blocking.","Attempts to acquire an exclusive lock until a timeout is …","Attempts to acquire an exclusive lock until a timeout is …","Attempts to acquire this lock until a timeout is reached.","Attempts to acquire this lock until a timeout is reached.","Attempts to acquire this lock until a timeout is reached.","Attempts to acquire this lock until a timeout is reached.","Attempts to acquire a shared lock without blocking.","Attempts to acquire a shared lock until a timeout is …","Attempts to acquire a shared lock without deadlocking in …","Attempts to acquire a shared lock until a timeout is …","Attempts to acquire a shared lock until a timeout is …","Attempts to acquire a shared lock until a timeout is …","Attempts to acquire this lock until a timeout is reached.","Attempts to acquire this lock until a timeout is reached.","Attempts to acquire this lock until a timeout is reached.","Attempts to acquire this lock until a timeout is reached.","Attempts to acquire an upgradable lock without blocking.","Attempts to acquire an upgradable lock until a timeout is …","Attempts to acquire an upgradable lock until a timeout is …","Attempts to make a new <code>MappedMutexGuard</code> for a component of …","Attempts to make a new <code>MappedMutexGuard</code> for a component of …","Attempts to make  a new <code>MappedReentrantMutexGuard</code> for a …","Attempts to make  a new <code>MappedReentrantMutexGuard</code> for a …","Attempts to make  a new <code>MappedRwLockReadGuard</code> for a …","Attempts to make  a new <code>MappedRwLockWriteGuard</code> for a …","Attempts to make  a new <code>MappedRwLockReadGuard</code> for a …","Attempts to make  a new <code>MappedRwLockWriteGuard</code> for a …","Attempts to acquire this <code>RwLock</code> with shared read access.","Attempts to acquire this <code>RwLock</code> with shared read access …","Attempts to acquire this <code>RwLock</code> with shared read access.","Attempts to acquire this <code>RwLock</code> with shared read access …","Attempts to acquire this <code>RwLock</code> with shared read access …","Attempts to acquire this <code>RwLock</code> with shared read access …","Attempts to acquire this <code>RwLock</code> with upgradable read …","Attempts to acquire this <code>RwLock</code> with upgradable read …","Attempts to acquire this <code>RwLock</code> with upgradable read …","Attempts to upgrade an upgradable lock to an exclusive …","Tries to atomically upgrade an upgradable read lock into a …","Attempts to upgrade an upgradable lock to an exclusive …","Tries to atomically upgrade an upgradable read lock into a …","Attempts to upgrade an upgradable lock to an exclusive …","Tries to atomically upgrade an upgradable read lock into a …","Attempts to lock this <code>RwLock</code> with exclusive write access.","Attempts to acquire this <code>RwLock</code> with exclusive write …","Attempts to acquire this <code>RwLock</code> with exclusive write …","","","","","","","","","","","","","","","","Unlocks this mutex.","Unlocks this mutex. The inner mutex may not be unlocked if …","Releases an exclusive lock.","Releases an exclusive lock using a fair unlock protocol.","Unlocks this mutex using a fair unlock protocol.","Unlocks the mutex using a fair unlock protocol.","Unlocks the mutex using a fair unlock protocol.","Unlocks this mutex using a fair unlock protocol. The inner …","Unlocks the mutex using a fair unlock protocol.","Unlocks the mutex using a fair unlock protocol.","Unlocks the <code>RwLock</code> using a fair unlock protocol.","Unlocks the <code>RwLock</code> using a fair unlock protocol.","Unlocks the <code>RwLock</code> using a fair unlock protocol.","Unlocks the <code>RwLock</code> using a fair unlock protocol.","Unlocks the <code>RwLock</code> using a fair unlock protocol.","Releases a shared lock.","Releases a shared lock using a fair unlock protocol.","Releases an upgradable lock.","Releases an upgradable lock using a fair unlock protocol.","Temporarily unlocks the mutex to execute the given …","Temporarily unlocks the mutex to execute the given …","Temporarily unlocks the <code>RwLock</code> to execute the given …","Temporarily unlocks the <code>RwLock</code> to execute the given …","Temporarily unlocks the <code>RwLock</code> to execute the given …","Temporarily unlocks the mutex to execute the given …","Temporarily unlocks the mutex to execute the given …","Temporarily unlocks the <code>RwLock</code> to execute the given …","Temporarily unlocks the <code>RwLock</code> to execute the given …","Temporarily unlocks the <code>RwLock</code> to execute the given …","Locks this <code>RwLock</code> with upgradable read access, blocking …","Upgrades an upgradable lock to an exclusive lock.","Atomically upgrades an upgradable read lock lock into a …","Locks this <code>RwLock</code> with exclusive write access, blocking …"],"i":[35,36,0,15,16,0,0,15,4,5,16,35,36,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,40,41,12,3,18,5,13,6,19,14,8,9,11,21,22,40,41,12,3,18,5,13,6,19,14,8,9,11,21,22,1,1,3,5,6,8,9,11,7,7,7,7,10,10,12,13,14,12,13,14,12,13,14,3,18,6,19,8,9,11,21,22,3,18,9,22,23,9,11,24,9,24,3,18,6,19,8,9,11,21,22,12,3,3,18,18,13,6,6,19,19,14,8,8,9,9,11,11,21,21,22,22,12,13,12,13,14,14,14,14,40,41,12,12,12,3,18,5,13,13,13,6,19,14,14,14,8,9,11,21,22,12,13,14,40,41,12,3,18,5,13,6,19,14,8,9,11,21,22,12,13,14,15,15,12,5,13,16,16,14,16,16,14,5,13,3,15,12,5,13,16,16,32,20,3,18,6,19,8,9,21,22,3,12,13,14,4,12,13,14,14,14,6,8,9,11,40,41,12,3,18,5,13,6,19,14,8,9,11,21,22,40,41,12,3,18,5,13,6,19,14,8,9,11,21,22,15,12,5,13,16,36,36,35,12,5,13,16,36,32,37,37,36,35,12,5,13,20,38,38,3,18,6,19,8,9,21,22,14,14,14,14,14,14,14,14,14,20,11,38,11,38,11,14,14,14,40,41,12,3,18,5,13,6,19,14,8,9,11,21,22,15,5,16,7,1,3,18,5,6,19,8,9,11,21,22,16,7,20,10,3,6,8,9,11,3,6,8,9,11,14,20,11,14],"f":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[[3,[1,2]]]],[[[5,[1,4]]]],[[[6,[1,4,2]]]],[[[8,[7,2]]]],[[[9,[7,2]]]],[[[11,[10,2]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[],12],[[],13],[[],14],[[[12,[15,2]]]],[[[13,[15,4,2]]]],[[[14,[16,2]]]],[[],[[12,[15,[0,[2,17]]]]]],[[],[[13,[15,4,[0,[2,17]]]]]],[[],[[14,[16,[0,[2,17]]]]]],[[[3,[15,2]]]],[[[18,[15,2]]]],[[[6,[15,4,2]]]],[[[19,[15,4,2]]]],[[[8,[16,2]]]],[[[9,[16,2]]]],[[[11,[20,2]]]],[[[21,[16,2]]]],[[[22,[16,2]]]],[[[3,[15,2]]]],[[[18,[15,2]]]],[[[9,[16,2]]]],[[[22,[16,2]]]],[[]],[[[9,[23,2]]],[[8,[23,2]]]],[[[11,[24,2]]],[[8,[24,2]]]],[[]],[[[9,[24,2]]],[[11,[24,2]]]],[[]],[[[3,[15,2]]]],[[[18,[15,2]]]],[[[6,[15,4,2]]]],[[[19,[15,4,2]]]],[[[8,[16,2]]]],[[[9,[16,2]]]],[[[11,[20,2]]]],[[[21,[16,2]]]],[[[22,[16,2]]]],[[[12,[15,[0,[2,25]]]],26],27],[[[3,[15,[0,[28,2]]]],26],27],[[[3,[15,[0,[25,2]]]],26],27],[[[18,[15,[0,[25,2]]]],26],27],[[[18,[15,[0,[28,2]]]],26],27],[[[13,[15,4,[0,[2,25]]]],26],27],[[[6,[15,4,[0,[28,2]]]],26],27],[[[6,[15,4,[0,[25,2]]]],26],27],[[[19,[15,4,[0,[25,2]]]],26],27],[[[19,[15,4,[0,[28,2]]]],26],27],[[[14,[16,[0,[2,25]]]],26],27],[[[8,[16,[0,[25,2]]]],26],27],[[[8,[16,[0,[28,2]]]],26],27],[[[9,[16,[0,[25,2]]]],26],27],[[[9,[16,[0,[28,2]]]],26],27],[[[11,[20,[0,[25,2]]]],26],27],[[[11,[20,[0,[28,2]]]],26],27],[[[21,[16,[0,[28,2]]]],26],27],[[[21,[16,[0,[25,2]]]],26],27],[[[22,[16,[0,[25,2]]]],26],27],[[[22,[16,[0,[28,2]]]],26],27],[[[12,[15,2]]]],[[[13,[15,4,2]]]],[[[12,[1,2]]]],[[[13,[1,4,2]]]],[[[14,[16,2]]]],[[[14,[7,2]]]],[[[14,[16,2]]]],[[[14,[7,2]]]],[[]],[[]],[29],[[]],[[],[[12,[15]]]],[[]],[[]],[[]],[[]],[[],[[13,[15,4]]]],[29],[[]],[[]],[[],[[14,[16]]]],[29],[[]],[[]],[[]],[[]],[[]],[[]],[[[12,[15,2]]]],[[[13,[15,4,2]]]],[[[14,[16,2]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[[12,[15]]]],[[[13,[15,4]]]],[[[14,[16]]]],[[],30],[[],30],[[[12,[15,2]]],30],[[[5,[15,4]]],30],[[[13,[15,4,2]]],30],[[],30],[[],30],[[[14,[16,2]]],30],[[],30],[[],30],[[[14,[16,2]]],30],[[[5,[15,4]]],30],[[[13,[15,4,2]]],30],[[[3,[15,2]]]],[[]],[[[12,[15,2]]],[[3,[15,2]]]],[[[5,[15,4]]]],[[[13,[15,4,2]]],[[6,[15,4,2]]]],[[]],[[]],[[]],[[]],[[[3,[15,2]]],[[18,[15,2]]]],[[[18,[15,2]]],[[18,[15,2]]]],[[[6,[15,4,2]]],[[19,[15,4,2]]]],[[[19,[15,4,2]]],[[19,[15,4,2]]]],[[[8,[16,2]]],[[21,[16,2]]]],[[[9,[16,2]]],[[22,[16,2]]]],[[[21,[16,2]]],[[21,[16,2]]]],[[[22,[16,2]]],[[22,[16,2]]]],[[[3,[15,2]]],12],[[],[[12,[15]]]],[[],[[13,[15,4]]]],[[],[[14,[16]]]],[[],31],[[[12,[15,2]]]],[[[13,[15,4,2]]]],[[[14,[16,2]]]],[[[14,[16,2]]],[[8,[16,2]]]],[[[14,[32,2]]],[[8,[32,2]]]],[[[6,[15,4,2]]],13],[[[8,[16,2]]],14],[[[9,[16,2]]],14],[[[11,[20,2]]],14],[[],33],[[],33],[[],33],[[],33],[[],33],[[],33],[[],33],[[],33],[[],33],[[],33],[[],33],[[],33],[[],33],[[],33],[[],33],[[],33],[[],33],[[],33],[[],33],[[],33],[[],33],[[],33],[[],33],[[],33],[[],33],[[],33],[[],33],[[],33],[[],33],[[],33],[[],30],[[[12,[15,2]]],[[34,[[3,[15,2]]]]]],[[[5,[15,4]]],30],[[[13,[15,4,2]]],[[34,[[6,[15,4,2]]]]]],[[],30],[[],30],[[],30],[[],30],[[[12,[35,2]]],[[34,[[3,[35,2]]]]]],[[[5,[35,4]]],30],[[[13,[35,4,2]]],[[34,[[6,[35,4,2]]]]]],[[],30],[[],30],[[],30],[[],30],[[],30],[[],30],[[],30],[[[12,[35,2]]],[[34,[[3,[35,2]]]]]],[[[5,[35,4]]],30],[[[13,[35,4,2]]],[[34,[[6,[35,4,2]]]]]],[[],30],[[],30],[[],30],[[[3,[15,2]]],[[33,[[18,[15,2]],[3,[15,2]]]]]],[[[18,[15,2]]],[[33,[[18,[15,2]],[18,[15,2]]]]]],[[[6,[15,4,2]]],[[33,[[19,[15,4,2]],[6,[15,4,2]]]]]],[[[19,[15,4,2]]],[[33,[[19,[15,4,2]],[19,[15,4,2]]]]]],[[[8,[16,2]]],[[33,[[21,[16,2]],[8,[16,2]]]]]],[[[9,[16,2]]],[[33,[[22,[16,2]],[9,[16,2]]]]]],[[[21,[16,2]]],[[33,[[21,[16,2]],[21,[16,2]]]]]],[[[22,[16,2]]],[[33,[[22,[16,2]],[22,[16,2]]]]]],[[[14,[16,2]]],[[34,[[8,[16,2]]]]]],[[[14,[36,2]]],[[34,[[8,[36,2]]]]]],[[[14,[32,2]]],[[34,[[8,[32,2]]]]]],[[[14,[37,2]]],[[34,[[8,[37,2]]]]]],[[[14,[37,2]]],[[34,[[8,[37,2]]]]]],[[[14,[36,2]]],[[34,[[8,[36,2]]]]]],[[[14,[20,2]]],[[34,[[11,[20,2]]]]]],[[[14,[38,2]]],[[34,[[11,[38,2]]]]]],[[[14,[38,2]]],[[34,[[11,[38,2]]]]]],[[],30],[[[11,[20,2]]],[[33,[[9,[20,2]],[11,[20,2]]]]]],[[],30],[[[11,[38,2]]],[[33,[[9,[38,2]],[11,[38,2]]]]]],[[],30],[[[11,[38,2]]],[[33,[[9,[38,2]],[11,[38,2]]]]]],[[[14,[16,2]]],[[34,[[9,[16,2]]]]]],[[[14,[36,2]]],[[34,[[9,[36,2]]]]]],[[[14,[36,2]]],[[34,[[9,[36,2]]]]]],[[],39],[[],39],[[],39],[[],39],[[],39],[[],39],[[],39],[[],39],[[],39],[[],39],[[],39],[[],39],[[],39],[[],39],[[],39],[[]],[[[5,[15,4]]]],[[]],[[]],[[]],[[[3,[1,2]]]],[[[18,[1,2]]]],[[[5,[1,4]]]],[[[6,[1,4,2]]]],[[[19,[1,4,2]]]],[[[8,[7,2]]]],[[[9,[7,2]]]],[[[11,[10,2]]]],[[[21,[7,2]]]],[[[22,[7,2]]]],[[]],[[]],[[]],[[]],[[[3,[15,2]]]],[[[6,[15,4,2]]]],[[[8,[16,2]]]],[[[9,[16,2]]]],[[[11,[20,2]]]],[[[3,[1,2]]]],[[[6,[1,4,2]]]],[[[8,[7,2]]]],[[[9,[7,2]]]],[[[11,[10,2]]]],[[[14,[20,2]]],[[11,[20,2]]]],[[]],[[[11,[20,2]]],[[9,[20,2]]]],[[[14,[16,2]]],[[9,[16,2]]]]],"p":[[8,"RawMutexFair"],[8,"Sized"],[3,"MutexGuard"],[8,"GetThreadId"],[3,"RawReentrantMutex"],[3,"ReentrantMutexGuard"],[8,"RawRwLockFair"],[3,"RwLockReadGuard"],[3,"RwLockWriteGuard"],[8,"RawRwLockUpgradeFair"],[3,"RwLockUpgradableReadGuard"],[3,"Mutex"],[3,"ReentrantMutex"],[3,"RwLock"],[8,"RawMutex"],[8,"RawRwLock"],[8,"Default"],[3,"MappedMutexGuard"],[3,"MappedReentrantMutexGuard"],[8,"RawRwLockUpgrade"],[3,"MappedRwLockReadGuard"],[3,"MappedRwLockWriteGuard"],[8,"RawRwLockDowngrade"],[8,"RawRwLockUpgradeDowngrade"],[8,"Debug"],[3,"Formatter"],[6,"Result"],[8,"Display"],[15,"never"],[15,"bool"],[3,"NonZeroUsize"],[8,"RawRwLockRecursive"],[4,"Result"],[4,"Option"],[8,"RawMutexTimed"],[8,"RawRwLockTimed"],[8,"RawRwLockRecursiveTimed"],[8,"RawRwLockUpgradeTimed"],[3,"TypeId"],[3,"GuardSend"],[3,"GuardNoSend"]]},\
"rcore_task_manage":{"doc":"任务管理 lib","t":[3,8,3,3,3,8,3,10,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,12,12,11,11,11,10,11,11,11,10,11,11,11,11,11,11,11,11,11,11,11,11,11,10,11,11,11,11,11,11,11,11,11,10,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11],"n":["CoroId","Manage","PThreadManager","ProcId","ProcThreadRel","Schedule","ThreadId","add","add","add_child","add_proc","add_thread","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","children","clone","clone","clone","clone_into","clone_into","clone_into","cmp","cmp","cmp","current","dead_children","dead_threads","del_child","del_proc","del_thread","delete","eq","eq","eq","fetch","find_next","fmt","fmt","fmt","from","from","from","from","from","from_usize","from_usize","from_usize","get_current_proc","get_mut","get_proc","get_task","get_thread","get_usize","get_usize","get_usize","hash","hash","hash","insert","into","into","into","into","into","make_current_blocked","make_current_exited","make_current_suspend","new","new","new","new","new","parent","partial_cmp","partial_cmp","partial_cmp","re_enque","set_manager","set_proc_manager","thread_count","threads","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","wait","wait_any_child","wait_child","wait_thread","waittid"],"q":["rcore_task_manage","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"d":["协程 Id","Manager trait","PThreadManager …","进程 Id","线程、进程之间的关系，通过进程的 Id …","Scheduler","线程 Id","入队","添加线程","添加子进程 Id","添加进程","添加线程","","","","","","","","","","","子进程列表","","","","","","","","","","当前线程","已经结束的子进程","已经结束的线程","子进程结束，子进程 Id 被移入到 dead_children …","结束当前进程","删除线程","删除 item","","","","出队","找到下一个进程","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","获取当前线程所属的进程","获取 mut item","查询进程","获取某个线程","查询进程的线程","","","","","","","插入 item","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","让当前线程阻塞","结束当前线程","当前线程重新入队","new/fork 创建进程时使用","新建 PThreadManager","","","","父进程 Id","","","","某个线程重新入队","设置 manager","设置 proc_manager","某个进程的线程数量","线程","","","","","","","","","","","","","","","","","","","wait 系统调用，返回结束的子进程 id 和 …","等待任意一个结束的子进程，直接弹出 …","等待特定的子进程","等待特定的线程结束","wait_tid 系统调用"],"i":[0,0,0,0,0,0,0,3,5,6,5,6,6,5,4,1,7,6,5,4,1,7,6,4,1,7,4,1,7,4,1,7,5,6,6,6,5,6,2,4,1,7,3,5,4,1,7,6,5,4,1,7,4,1,7,5,2,5,5,5,4,1,7,4,1,7,2,6,5,4,1,7,5,5,5,6,5,4,1,7,6,4,1,7,5,5,5,5,6,4,1,7,6,5,4,1,7,6,5,4,1,7,6,5,4,1,7,5,6,6,6,5],"f":[0,0,0,0,0,0,0,[[]],[[[5,[[0,[[2,[1]],[3,[1]]]],[2,[4]]]],1,4]],[[6,4]],[[[5,[[0,[[2,[1]],[3,[1]]]],[2,[4]]]],4,4]],[[6,1]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,[4,4],[1,1],[7,7],[[]],[[]],[[]],[[4,4],8],[[1,1],8],[[7,7],8],[[[5,[[0,[[2,[1]],[3,[1]]]],[2,[4]]]]],9],0,0,[[6,4,10]],[[[5,[[0,[[2,[1]],[3,[1]]]],[2,[4]]]],4,10]],[[6,1,10]],[[]],[[4,4],11],[[1,1],11],[[7,7],11],[[],9],[[[5,[[0,[[2,[1]],[3,[1]]]],[2,[4]]]]],9],[[4,12],13],[[1,12],13],[[7,12],13],[[]],[[]],[[]],[[]],[[]],[14,4],[14,1],[14,7],[[[5,[[0,[[2,[1]],[3,[1]]]],[2,[4]]]]],9],[[],9],[[[5,[[0,[[2,[1]],[3,[1]]]],[2,[4]]]],4],9],[[[5,[[0,[[2,[1]],[3,[1]]]],[2,[4]]]],1],9],[[[5,[[0,[[2,[1]],[3,[1]]]],[2,[4]]]],4],[[9,[15]]]],[4,14],[1,14],[7,14],[4],[1],[7],[[]],[[]],[[]],[[]],[[]],[[]],[[[5,[[0,[[2,[1]],[3,[1]]]],[2,[4]]]]]],[[[5,[[0,[[2,[1]],[3,[1]]]],[2,[4]]]],10]],[[[5,[[0,[[2,[1]],[3,[1]]]],[2,[4]]]]]],[4,6],[[],[[5,[[0,[[2,[1]],[3,[1]]]],[2,[4]]]]]],[[],4],[[],1],[[],7],0,[[4,4],[[9,[8]]]],[[1,1],[[9,[8]]]],[[7,7],[[9,[8]]]],[[[5,[[0,[[2,[1]],[3,[1]]]],[2,[4]]]],1]],[[[5,[[0,[[2,[1]],[3,[1]]]],[2,[4]]]],[0,[[2,[1]],[3,[1]]]]]],[[[5,[[0,[[2,[1]],[3,[1]]]],[2,[4]]]],[2,[4]]]],[[[5,[[0,[[2,[1]],[3,[1]]]],[2,[4]]]],4],14],0,[[]],[[]],[[]],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],17],[[],17],[[],17],[[],17],[[],17],[[[5,[[0,[[2,[1]],[3,[1]]]],[2,[4]]]],4],9],[6,9],[[6,4],9],[[6,1],[[9,[10]]]],[[[5,[[0,[[2,[1]],[3,[1]]]],[2,[4]]]],1],[[9,[10]]]]],"p":[[3,"ThreadId"],[8,"Manage"],[8,"Schedule"],[3,"ProcId"],[3,"PThreadManager"],[3,"ProcThreadRel"],[3,"CoroId"],[4,"Ordering"],[4,"Option"],[15,"isize"],[15,"bool"],[3,"Formatter"],[6,"Result"],[15,"usize"],[3,"Vec"],[4,"Result"],[3,"TypeId"]]},\
"riscv":{"doc":"Low level access to RISC-V processors","t":[0,0,0,0,14,5,5,5,5,5,5,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,3,3,11,11,11,11,11,11,5,5,11,11,5,11,11,11,11,11,11,11,11,11,11,11,11,11,11,13,13,13,13,4,3,3,13,13,13,13,4,13,13,13,13,12,11,11,11,11,11,11,11,11,12,11,11,11,0,0,0,11,11,11,11,11,11,11,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,11,11,11,11,11,12,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,12,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,12,0,0,0,0,0,0,0,0,0,0,0,0,11,11,11,11,11,11,11,11,11,11,11,11,0,0,0,0,0,0,0,0,5,5,5,13,3,4,3,13,13,13,13,13,13,13,13,13,4,13,11,11,11,11,11,11,11,11,11,5,5,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,5,5,11,11,11,11,11,11,11,11,11,11,11,11,11,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,3,11,11,11,11,11,11,11,5,11,11,11,13,4,13,13,13,13,13,4,13,13,13,13,13,13,13,13,3,13,13,13,13,13,13,13,4,13,13,13,13,13,13,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,5,11,11,11,11,11,11,11,11,11,11,11,11,3,11,11,5,5,5,5,11,11,11,11,11,11,11,5,5,5,5,5,11,11,11,11,5,5,5,3,11,11,11,11,5,5,5,5,5,5,5,5,5,5,5,5,5,5,11,11,11,11,11,11,11,11,11,11,11,11,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,11,11,11,11,11,11,11,11,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,3,11,11,11,5,5,5,5,5,5,11,11,11,11,5,5,5,5,5,5,5,11,11,11,11,11,11,11,11,11,3,11,11,11,5,5,5,5,5,5,5,5,5,11,11,11,11,11,11,11,5,5,5,5,5,5,5,5,5,5,11,11,11,11,11,11,11,11,11,3,11,11,11,11,11,11,11,5,11,11,11,5,5,5,3,11,11,11,5,5,5,5,5,5,5,5,11,11,11,11,11,11,11,5,5,5,5,5,5,5,5,5,11,11,11,11,11,11,11,11,11,4,3,13,13,13,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,5,11,11,11,11,11,11,5,5,13,13,13,4,13,4,13,3,13,13,13,4,13,13,13,13,13,4,11,11,11,11,11,11,11,11,11,11,5,5,5,5,5,5,5,5,5,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,5,11,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,5,13,3,4,13,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,5,11,11,11,11,11,11,11,5,3,11,11,11,11,11,11,11,11,5,11,11,11,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,13,4,3,13,13,13,13,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,5,5,11,11,11,11,11,11,5,13,4,13,13,13,13,13,4,13,13,13,3,13,13,13,13,13,13,4,13,13,13,13,13,13,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,5,5,11,11,11,11,11,11,11,11,11,11,11,11,5,3,11,11,5,5,5,5,11,11,11,11,11,11,11,5,5,5,5,5,11,11,11,11,5,5,3,11,11,11,5,5,5,5,5,5,11,11,11,11,5,5,5,5,5,5,5,11,11,11,11,11,11,11,11,11,3,11,11,11,11,11,11,11,5,11,11,11,11,11,11,11,11,11,5,5,2,4,3,13,13,11,11,11,11,5,5,5,5,11,11,11,11,11,11,11,11,11,11,11,5,11,5,5,5,5,5,5,5,5,11,11,11,11,11,11,11,11,11,11,11,11,11,5,5,3,2,11,11,11,11,11,11,11,11,5,11,11,11,11,5,5,5,5,3,11,11,11,11,11,11,11,5,11,11,11,5,5,5,3,11,11,11,5,5,5,11,11,11,11,5,5,5,5,11,11,11,11,11,11,3,11,11,11,11,11,11,11,5,11,11,11,11,11,11,5,5,3,11,11,5,11,11,11,11,5,5,5,11,11,11,11,11,5,5,2,3,11,11,11,11,11,11,11,11,5,11,11,11,11,5],"n":["asm","delay","interrupt","register","singleton","delay","ebreak","nop","sfence_vma","sfence_vma_all","wfi","McycleDelay","borrow","borrow_mut","clone","delay_ms","delay_ms","delay_ms","delay_ms","delay_us","delay_us","delay_us","delay_us","delay_us","from","into","new","try_from","try_into","type_id","CriticalSection","Mutex","borrow","borrow","borrow","borrow_mut","borrow_mut","clone","disable","enable","fmt","fmt","free","from","from","get_mut","into","into","into_inner","new","new","try_from","try_from","try_into","try_into","type_id","type_id","NA4","NAPOT","NONE","OFF","Permission","Pmp","Pmpcsr","R","RW","RWX","RX","Range","TOR","W","WX","X","bits","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","byte","clone","clone","clone","cycle","cycleh","fcsr","fmt","fmt","fmt","from","from","from","from","hpmcounter10","hpmcounter10h","hpmcounter11","hpmcounter11h","hpmcounter12","hpmcounter12h","hpmcounter13","hpmcounter13h","hpmcounter14","hpmcounter14h","hpmcounter15","hpmcounter15h","hpmcounter16","hpmcounter16h","hpmcounter17","hpmcounter17h","hpmcounter18","hpmcounter18h","hpmcounter19","hpmcounter19h","hpmcounter20","hpmcounter20h","hpmcounter21","hpmcounter21h","hpmcounter22","hpmcounter22h","hpmcounter23","hpmcounter23h","hpmcounter24","hpmcounter24h","hpmcounter25","hpmcounter25h","hpmcounter26","hpmcounter26h","hpmcounter27","hpmcounter27h","hpmcounter28","hpmcounter28h","hpmcounter29","hpmcounter29h","hpmcounter3","hpmcounter30","hpmcounter30h","hpmcounter31","hpmcounter31h","hpmcounter3h","hpmcounter4","hpmcounter4h","hpmcounter5","hpmcounter5h","hpmcounter6","hpmcounter6h","hpmcounter7","hpmcounter7h","hpmcounter8","hpmcounter8h","hpmcounter9","hpmcounter9h","instret","instreth","into","into","into","into","into_config","locked","marchid","mcause","mcounteren","mcycle","mcycleh","medeleg","mepc","mhartid","mhpmcounter10","mhpmcounter10h","mhpmcounter11","mhpmcounter11h","mhpmcounter12","mhpmcounter12h","mhpmcounter13","mhpmcounter13h","mhpmcounter14","mhpmcounter14h","mhpmcounter15","mhpmcounter15h","mhpmcounter16","mhpmcounter16h","mhpmcounter17","mhpmcounter17h","mhpmcounter18","mhpmcounter18h","mhpmcounter19","mhpmcounter19h","mhpmcounter20","mhpmcounter20h","mhpmcounter21","mhpmcounter21h","mhpmcounter22","mhpmcounter22h","mhpmcounter23","mhpmcounter23h","mhpmcounter24","mhpmcounter24h","mhpmcounter25","mhpmcounter25h","mhpmcounter26","mhpmcounter26h","mhpmcounter27","mhpmcounter27h","mhpmcounter28","mhpmcounter28h","mhpmcounter29","mhpmcounter29h","mhpmcounter3","mhpmcounter30","mhpmcounter30h","mhpmcounter31","mhpmcounter31h","mhpmcounter3h","mhpmcounter4","mhpmcounter4h","mhpmcounter5","mhpmcounter5h","mhpmcounter6","mhpmcounter6h","mhpmcounter7","mhpmcounter7h","mhpmcounter8","mhpmcounter8h","mhpmcounter9","mhpmcounter9h","mhpmevent10","mhpmevent11","mhpmevent12","mhpmevent13","mhpmevent14","mhpmevent15","mhpmevent16","mhpmevent17","mhpmevent18","mhpmevent19","mhpmevent20","mhpmevent21","mhpmevent22","mhpmevent23","mhpmevent24","mhpmevent25","mhpmevent26","mhpmevent27","mhpmevent28","mhpmevent29","mhpmevent3","mhpmevent30","mhpmevent31","mhpmevent4","mhpmevent5","mhpmevent6","mhpmevent7","mhpmevent8","mhpmevent9","mideleg","mie","mimpid","minstret","minstreth","mip","misa","mscratch","mstatus","mtval","mtvec","mvendorid","permission","pmpaddr0","pmpaddr1","pmpaddr10","pmpaddr11","pmpaddr12","pmpaddr13","pmpaddr14","pmpaddr15","pmpaddr2","pmpaddr3","pmpaddr4","pmpaddr5","pmpaddr6","pmpaddr7","pmpaddr8","pmpaddr9","pmpcfg0","pmpcfg2","range","satp","scause","scounteren","sepc","sie","sip","sscratch","sstatus","stval","stvec","time","timeh","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","ucause","uepc","uie","uip","uscratch","ustatus","utval","utvec","read","read64","read","DZ","FCSR","Flag","Flags","Invalid","NV","NX","OF","RoundDown","RoundToNearestEven","RoundToNearestMaxMagnitude","RoundTowardsZero","RoundUp","RoundingMode","UF","bits","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clear_flag","clear_flags","clone","clone","clone","clone","dz","eq","fflags","fmt","fmt","fmt","fmt","frm","from","from","from","from","into","into","into","into","nv","nx","of","read","set_rounding_mode","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","uf","read","read64","read","read","read64","read","read","read64","read","read","read64","read","read","read64","read","read","read64","read","read","read64","read","read","read64","read","read","read64","read","read","read64","read","read","read64","read","read","read64","read","read","read64","read","read","read64","read","read","read64","read","read","read64","read","read","read64","read","read","read64","read","read","read64","read","read","read64","read","read","read64","read","read64","read","read","read64","read","read","read","read64","read","read","read64","read","read","read64","read","read","read64","read","read","read64","read","read","read64","read","read","read64","read","Marchid","bits","borrow","borrow_mut","clone","fmt","from","into","read","try_from","try_into","type_id","Breakpoint","Exception","Exception","IllegalInstruction","InstructionFault","InstructionMisaligned","InstructionPageFault","Interrupt","Interrupt","LoadFault","LoadMisaligned","LoadPageFault","MachineEnvCall","MachineExternal","MachineSoft","MachineTimer","Mcause","StoreFault","StoreMisaligned","StorePageFault","SupervisorEnvCall","SupervisorExternal","SupervisorSoft","SupervisorTimer","Trap","Unknown","Unknown","UserEnvCall","UserExternal","UserSoft","UserTimer","bits","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","cause","clone","clone","clone","clone","code","eq","eq","eq","fmt","fmt","fmt","fmt","from","from","from","from","from","from","into","into","into","into","is_exception","is_interrupt","read","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","Mcounteren","borrow","borrow_mut","clear_cy","clear_hpm","clear_ir","clear_tm","clone","cy","fmt","from","hpm","into","ir","read","set_cy","set_hpm","set_ir","set_tm","tm","try_from","try_into","type_id","read","read64","read","Medeleg","bits","borrow","borrow_mut","breakpoint","clear_breakpoint","clear_illegal_instruction","clear_instruction_fault","clear_instruction_misaligned","clear_instruction_page_fault","clear_load_fault","clear_load_misaligned","clear_load_page_fault","clear_machine_env_call","clear_store_fault","clear_store_misaligned","clear_store_page_fault","clear_supervisor_env_call","clear_user_env_call","clone","fmt","from","illegal_instruction","instruction_fault","instruction_misaligned","instruction_page_fault","into","load_fault","load_misaligned","load_page_fault","machine_env_call","read","set_breakpoint","set_illegal_instruction","set_instruction_fault","set_instruction_misaligned","set_instruction_page_fault","set_load_fault","set_load_misaligned","set_load_page_fault","set_machine_env_call","set_store_fault","set_store_misaligned","set_store_page_fault","set_supervisor_env_call","set_user_env_call","store_fault","store_misaligned","store_page_fault","supervisor_env_call","try_from","try_into","type_id","user_env_call","read","write","read","read","read64","write","read","write","read","read64","write","read","write","read","read64","write","read","write","read","read64","write","read","write","read","read64","write","read","write","read","read64","write","read","write","read","read64","write","read","write","read","read64","write","read","write","read","read64","write","read","write","read","read64","write","read","write","read","read64","write","read","write","read","read64","write","read","write","read","read64","write","read","write","read","read64","write","read","write","read","read64","write","read","write","read","read64","write","read","write","read","read64","write","read","write","read","read64","write","read","write","read","read64","write","read","write","read","read64","write","read","write","read","read64","write","read","read64","write","read","write","read","read64","write","read","write","read","write","read","read64","write","read","write","read","read64","write","read","write","read","read64","write","read","write","read","read64","write","read","write","read","read64","write","read","write","read","read64","write","read","write","read","write","read","write","read","write","read","write","read","write","read","write","read","write","read","write","read","write","read","write","read","write","read","write","read","write","read","write","read","write","read","write","read","write","read","write","read","write","read","write","read","write","read","write","read","write","read","write","read","write","read","write","read","write","read","write","read","write","Mideleg","bits","borrow","borrow_mut","clear_sext","clear_ssoft","clear_stimer","clear_uext","clear_usoft","clear_utimer","clone","fmt","from","into","read","set_sext","set_ssoft","set_stimer","set_uext","set_usoft","set_utimer","sext","ssoft","stimer","try_from","try_into","type_id","uext","usoft","utimer","Mie","bits","borrow","borrow_mut","clear_mext","clear_msoft","clear_mtimer","clear_sext","clear_ssoft","clear_stimer","clear_uext","clear_usoft","clear_utimer","clone","fmt","from","into","mext","msoft","mtimer","read","set_mext","set_msoft","set_mtimer","set_sext","set_ssoft","set_stimer","set_uext","set_usoft","set_utimer","sext","ssoft","stimer","try_from","try_into","type_id","uext","usoft","utimer","Mimpid","bits","borrow","borrow_mut","clone","fmt","from","into","read","try_from","try_into","type_id","read","read64","read","Mip","bits","borrow","borrow_mut","clear_msoft","clear_mtimer","clear_sext","clear_ssoft","clear_stimer","clear_uext","clear_usoft","clear_utimer","clone","fmt","from","into","mext","msoft","mtimer","read","set_msoft","set_mtimer","set_sext","set_ssoft","set_stimer","set_uext","set_usoft","set_utimer","sext","ssoft","stimer","try_from","try_into","type_id","uext","usoft","utimer","MXL","Misa","XLEN128","XLEN32","XLEN64","bits","borrow","borrow","borrow_mut","borrow_mut","clone","clone","eq","fmt","fmt","from","from","has_extension","into","into","mxl","read","try_from","try_from","try_into","try_into","type_id","type_id","read","write","AllOff","Clean","Dirty","FS","Initial","MPP","Machine","Mstatus","NoneDirtyOrClean","NoneDirtySomeClean","Off","SPP","SomeDirty","Supervisor","Supervisor","User","User","XS","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clear_mie","clear_mprv","clear_mxr","clear_sie","clear_sum","clear_tsr","clear_tvm","clear_tw","clear_uie","clone","clone","clone","clone","clone","eq","eq","eq","eq","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","fs","into","into","into","into","into","mie","mpie","mpp","mprv","mxr","read","sd","set_fs","set_mie","set_mpie","set_mpp","set_mprv","set_mxr","set_sie","set_spie","set_spp","set_sum","set_tsr","set_tvm","set_tw","set_uie","set_upie","sie","spie","spp","sum","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","tsr","tvm","tw","type_id","type_id","type_id","type_id","type_id","uie","upie","xs","read","Direct","Mtvec","TrapMode","Vectored","address","bits","borrow","borrow","borrow_mut","borrow_mut","clone","clone","eq","fmt","fmt","from","from","into","into","read","trap_mode","try_from","try_from","try_into","try_into","type_id","type_id","write","Mvendorid","bits","borrow","borrow_mut","clone","fmt","from","into","jedec_manufacturer","read","try_from","try_into","type_id","read","write","read","write","read","write","read","write","read","write","read","write","read","write","read","write","read","write","read","write","read","write","read","write","read","write","read","write","read","write","read","write","clear_pmp","read","set_pmp","write","clear_pmp","read","set_pmp","write","Bare","Mode","Satp","Sv39","Sv48","Sv57","Sv64","asid","bits","borrow","borrow","borrow_mut","borrow_mut","clone","clone","eq","fmt","fmt","from","from","into","into","mode","ppn","read","set","try_from","try_from","try_into","try_into","type_id","type_id","write","Breakpoint","Exception","Exception","IllegalInstruction","InstructionFault","InstructionMisaligned","InstructionPageFault","Interrupt","Interrupt","LoadFault","LoadPageFault","Scause","StoreFault","StoreMisaligned","StorePageFault","SupervisorExternal","SupervisorSoft","SupervisorTimer","Trap","Unknown","Unknown","UserEnvCall","UserExternal","UserSoft","UserTimer","bits","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","cause","clone","clone","clone","clone","code","eq","eq","eq","fmt","fmt","fmt","from","from","from","from","from","from","into","into","into","into","is_exception","is_interrupt","read","set","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","write","Scounteren","borrow","borrow_mut","clear_cy","clear_hpm","clear_ir","clear_tm","clone","cy","fmt","from","hpm","into","ir","read","set_cy","set_hpm","set_ir","set_tm","tm","try_from","try_into","type_id","read","write","Sie","bits","borrow","borrow_mut","clear_sext","clear_ssoft","clear_stimer","clear_uext","clear_usoft","clear_utimer","clone","fmt","from","into","read","set_sext","set_ssoft","set_stimer","set_uext","set_usoft","set_utimer","sext","ssoft","stimer","try_from","try_into","type_id","uext","usoft","utimer","Sip","bits","borrow","borrow_mut","clone","fmt","from","into","read","sext","ssoft","stimer","try_from","try_into","type_id","uext","usoft","utimer","read","write","FS","SPP","Sstatus","Supervisor","User","borrow","borrow","borrow_mut","borrow_mut","clear_mxr","clear_sie","clear_sum","clear_uie","clone","clone","eq","fmt","fmt","from","from","fs","into","into","mxr","read","sd","set_fs","set_mxr","set_sie","set_spie","set_spp","set_sum","set_uie","set_upie","sie","spie","spp","sum","try_from","try_from","try_into","try_into","type_id","type_id","uie","upie","xs","read","write","Stvec","TrapMode","address","bits","borrow","borrow_mut","clone","fmt","from","into","read","trap_mode","try_from","try_into","type_id","write","read","read64","read","Ucause","bits","borrow","borrow_mut","clone","fmt","from","into","read","try_from","try_into","type_id","write","read","write","Uie","bits","borrow","borrow_mut","clear_uext","clear_usoft","clear_utimer","clone","fmt","from","into","read","set_uext","set_usoft","set_utimer","try_from","try_into","type_id","uext","usoft","utimer","Uip","bits","borrow","borrow_mut","clone","fmt","from","into","read","try_from","try_into","type_id","uext","usoft","utimer","read","write","Ustatus","borrow","borrow_mut","clear_uie","clone","fmt","from","into","read","set_uie","set_upie","try_from","try_into","type_id","uie","upie","read","write","TrapMode","Utvec","address","bits","borrow","borrow_mut","clone","fmt","from","into","read","trap_mode","try_from","try_into","type_id","write"],"q":["riscv","","","","","riscv::asm","","","","","","riscv::delay","","","","","","","","","","","","","","","","","","","riscv::interrupt","","","","","","","","","","","","","","","","","","","","","","","","","","","riscv::registerriscv::register::cycle","","riscv::register::cycleh","riscv::register::fcsr","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","riscv::register::hpmcounter10","","riscv::register::hpmcounter10h","riscv::register::hpmcounter11","","riscv::register::hpmcounter11h","riscv::register::hpmcounter12","","riscv::register::hpmcounter12h","riscv::register::hpmcounter13","","riscv::register::hpmcounter13h","riscv::register::hpmcounter14","","riscv::register::hpmcounter14h","riscv::register::hpmcounter15","","riscv::register::hpmcounter15h","riscv::register::hpmcounter16","","riscv::register::hpmcounter16h","riscv::register::hpmcounter17","","riscv::register::hpmcounter17h","riscv::register::hpmcounter18","","riscv::register::hpmcounter18h","riscv::register::hpmcounter19","","riscv::register::hpmcounter19h","riscv::register::hpmcounter20","","riscv::register::hpmcounter20h","riscv::register::hpmcounter21","","riscv::register::hpmcounter21h","riscv::register::hpmcounter22","","riscv::register::hpmcounter22h","riscv::register::hpmcounter23","","riscv::register::hpmcounter23h","riscv::register::hpmcounter24","","riscv::register::hpmcounter24h","riscv::register::hpmcounter25","","riscv::register::hpmcounter25h","riscv::register::hpmcounter26","","riscv::register::hpmcounter26h","riscv::register::hpmcounter27","","riscv::register::hpmcounter27h","riscv::register::hpmcounter28","","riscv::register::hpmcounter28h","riscv::register::hpmcounter29","","riscv::register::hpmcounter29h","riscv::register::hpmcounter3","","riscv::register::hpmcounter30","","riscv::register::hpmcounter30h","riscv::register::hpmcounter31","","riscv::register::hpmcounter31h","riscv::register::hpmcounter3h","riscv::register::hpmcounter4","","riscv::register::hpmcounter4h","riscv::register::hpmcounter5","","riscv::register::hpmcounter5h","riscv::register::hpmcounter6","","riscv::register::hpmcounter6h","riscv::register::hpmcounter7","","riscv::register::hpmcounter7h","riscv::register::hpmcounter8","","riscv::register::hpmcounter8h","riscv::register::hpmcounter9","","riscv::register::hpmcounter9h","riscv::register::instret","","riscv::register::instreth","riscv::register::marchid","","","","","","","","","","","","riscv::register::mcause","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","riscv::register::mcounteren","","","","","","","","","","","","","","","","","","","","","","","riscv::register::mcycle","","riscv::register::mcycleh","riscv::register::medeleg","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","riscv::register::mepc","","riscv::register::mhartid","riscv::register::mhpmcounter10","","","riscv::register::mhpmcounter10h","","riscv::register::mhpmcounter11","","","riscv::register::mhpmcounter11h","","riscv::register::mhpmcounter12","","","riscv::register::mhpmcounter12h","","riscv::register::mhpmcounter13","","","riscv::register::mhpmcounter13h","","riscv::register::mhpmcounter14","","","riscv::register::mhpmcounter14h","","riscv::register::mhpmcounter15","","","riscv::register::mhpmcounter15h","","riscv::register::mhpmcounter16","","","riscv::register::mhpmcounter16h","","riscv::register::mhpmcounter17","","","riscv::register::mhpmcounter17h","","riscv::register::mhpmcounter18","","","riscv::register::mhpmcounter18h","","riscv::register::mhpmcounter19","","","riscv::register::mhpmcounter19h","","riscv::register::mhpmcounter20","","","riscv::register::mhpmcounter20h","","riscv::register::mhpmcounter21","","","riscv::register::mhpmcounter21h","","riscv::register::mhpmcounter22","","","riscv::register::mhpmcounter22h","","riscv::register::mhpmcounter23","","","riscv::register::mhpmcounter23h","","riscv::register::mhpmcounter24","","","riscv::register::mhpmcounter24h","","riscv::register::mhpmcounter25","","","riscv::register::mhpmcounter25h","","riscv::register::mhpmcounter26","","","riscv::register::mhpmcounter26h","","riscv::register::mhpmcounter27","","","riscv::register::mhpmcounter27h","","riscv::register::mhpmcounter28","","","riscv::register::mhpmcounter28h","","riscv::register::mhpmcounter29","","","riscv::register::mhpmcounter29h","","riscv::register::mhpmcounter3","","","riscv::register::mhpmcounter30","","","riscv::register::mhpmcounter30h","","riscv::register::mhpmcounter31","","","riscv::register::mhpmcounter31h","","riscv::register::mhpmcounter3h","","riscv::register::mhpmcounter4","","","riscv::register::mhpmcounter4h","","riscv::register::mhpmcounter5","","","riscv::register::mhpmcounter5h","","riscv::register::mhpmcounter6","","","riscv::register::mhpmcounter6h","","riscv::register::mhpmcounter7","","","riscv::register::mhpmcounter7h","","riscv::register::mhpmcounter8","","","riscv::register::mhpmcounter8h","","riscv::register::mhpmcounter9","","","riscv::register::mhpmcounter9h","","riscv::register::mhpmevent10","","riscv::register::mhpmevent11","","riscv::register::mhpmevent12","","riscv::register::mhpmevent13","","riscv::register::mhpmevent14","","riscv::register::mhpmevent15","","riscv::register::mhpmevent16","","riscv::register::mhpmevent17","","riscv::register::mhpmevent18","","riscv::register::mhpmevent19","","riscv::register::mhpmevent20","","riscv::register::mhpmevent21","","riscv::register::mhpmevent22","","riscv::register::mhpmevent23","","riscv::register::mhpmevent24","","riscv::register::mhpmevent25","","riscv::register::mhpmevent26","","riscv::register::mhpmevent27","","riscv::register::mhpmevent28","","riscv::register::mhpmevent29","","riscv::register::mhpmevent3","","riscv::register::mhpmevent30","","riscv::register::mhpmevent31","","riscv::register::mhpmevent4","","riscv::register::mhpmevent5","","riscv::register::mhpmevent6","","riscv::register::mhpmevent7","","riscv::register::mhpmevent8","","riscv::register::mhpmevent9","","riscv::register::mideleg","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","riscv::register::mie","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","riscv::register::mimpid","","","","","","","","","","","","riscv::register::minstret","","riscv::register::minstreth","riscv::register::mip","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","riscv::register::misa","","","","","","","","","","","","","","","","","","","","","","","","","","","","riscv::register::mscratch","","riscv::register::mstatus","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","riscv::register::mtval","riscv::register::mtvec","","","","","","","","","","","","","","","","","","","","","","","","","","","","riscv::register::mvendorid","","","","","","","","","","","","","riscv::register::pmpaddr0","","riscv::register::pmpaddr1","","riscv::register::pmpaddr10","","riscv::register::pmpaddr11","","riscv::register::pmpaddr12","","riscv::register::pmpaddr13","","riscv::register::pmpaddr14","","riscv::register::pmpaddr15","","riscv::register::pmpaddr2","","riscv::register::pmpaddr3","","riscv::register::pmpaddr4","","riscv::register::pmpaddr5","","riscv::register::pmpaddr6","","riscv::register::pmpaddr7","","riscv::register::pmpaddr8","","riscv::register::pmpaddr9","","riscv::register::pmpcfg0","","","","riscv::register::pmpcfg2","","","","riscv::register::satp","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","riscv::register::scause","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","riscv::register::scounteren","","","","","","","","","","","","","","","","","","","","","","","riscv::register::sepc","","riscv::register::sie","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","riscv::register::sip","","","","","","","","","","","","","","","","","","riscv::register::sscratch","","riscv::register::sstatus","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","riscv::register::stval","","riscv::register::stvec","","","","","","","","","","","","","","","","riscv::register::time","","riscv::register::timeh","riscv::register::ucause","","","","","","","","","","","","","riscv::register::uepc","","riscv::register::uie","","","","","","","","","","","","","","","","","","","","","riscv::register::uip","","","","","","","","","","","","","","","riscv::register::uscratch","","riscv::register::ustatus","","","","","","","","","","","","","","","","riscv::register::utval","","riscv::register::utvec","","","","","","","","","","","","","","",""],"d":["Assembly instructions","","Interrupts","RISC-V CSR’s","Macro to create a mutable reference to a statically …","Blocks the program for <em>at least</em> <code>cycles</code> CPU cycles.","<code>EBREAK</code> instruction wrapper","<code>nop</code> instruction wrapper","<code>SFENCE.VMA</code> instruction wrapper","<code>SFENCE.VMA</code> instruction wrapper (all address spaces and …","<code>WFI</code> instruction wrapper","Machine mode cycle counter (<code>mcycle</code>) as a delay provider","","","","","","","","","","","","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Constructs the delay provider","","","","Critical section token.","A “mutex” based on critical sections.","","Borrows the data for the duration of the critical section.","","","","","Disables all interrupts","Enables all the interrupts","","","Execute closure <code>f</code> in an interrupt-free context.","Returns the argument unchanged.","Returns the argument unchanged.","Gets a mutable reference to the contained value when the …","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Unwraps the contained value, consuming the mutex.","Creates a critical section token.","Creates a new mutex.","","","","","","","","","","","Permission enum contains all possible permission modes for …","Pmp struct holds a high-level representation of a single …","","","","","","Range enum contains all possible addressing modes for pmp …","","","","","Holds the raw contents of a PMP CSR Register","","","","","","","","","raw bits","","","","cycle register","cycleh register","Floating-point control and status register","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Performance-monitoring counter","Upper 32 bits of performance-monitoring counter (RV32I …","Performance-monitoring counter","Upper 32 bits of performance-monitoring counter (RV32I …","Performance-monitoring counter","Upper 32 bits of performance-monitoring counter (RV32I …","Performance-monitoring counter","Upper 32 bits of performance-monitoring counter (RV32I …","Performance-monitoring counter","Upper 32 bits of performance-monitoring counter (RV32I …","Performance-monitoring counter","Upper 32 bits of performance-monitoring counter (RV32I …","Performance-monitoring counter","Upper 32 bits of performance-monitoring counter (RV32I …","Performance-monitoring counter","Upper 32 bits of performance-monitoring counter (RV32I …","Performance-monitoring counter","Upper 32 bits of performance-monitoring counter (RV32I …","Performance-monitoring counter","Upper 32 bits of performance-monitoring counter (RV32I …","Performance-monitoring counter","Upper 32 bits of performance-monitoring counter (RV32I …","Performance-monitoring counter","Upper 32 bits of performance-monitoring counter (RV32I …","Performance-monitoring counter","Upper 32 bits of performance-monitoring counter (RV32I …","Performance-monitoring counter","Upper 32 bits of performance-monitoring counter (RV32I …","Performance-monitoring counter","Upper 32 bits of performance-monitoring counter (RV32I …","Performance-monitoring counter","Upper 32 bits of performance-monitoring counter (RV32I …","Performance-monitoring counter","Upper 32 bits of performance-monitoring counter (RV32I …","Performance-monitoring counter","Upper 32 bits of performance-monitoring counter (RV32I …","Performance-monitoring counter","Upper 32 bits of performance-monitoring counter (RV32I …","Performance-monitoring counter","Upper 32 bits of performance-monitoring counter (RV32I …","Performance-monitoring counter","Performance-monitoring counter","Upper 32 bits of performance-monitoring counter (RV32I …","Performance-monitoring counter","Upper 32 bits of performance-monitoring counter (RV32I …","Upper 32 bits of performance-monitoring counter (RV32I …","Performance-monitoring counter","Upper 32 bits of performance-monitoring counter (RV32I …","Performance-monitoring counter","Upper 32 bits of performance-monitoring counter (RV32I …","Performance-monitoring counter","Upper 32 bits of performance-monitoring counter (RV32I …","Performance-monitoring counter","Upper 32 bits of performance-monitoring counter (RV32I …","Performance-monitoring counter","Upper 32 bits of performance-monitoring counter (RV32I …","Performance-monitoring counter","Upper 32 bits of performance-monitoring counter (RV32I …","instret register","instreth register","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Take the register contents and translate into a Pmp …","Is PMP locked?","marchid register","mcause register","mcounteren register","mcycle register","mcycleh register","medeleg register","mepc register","mhartid register","Machine performance-monitoring counter","Upper 32 bits of machine performance-monitoring counter …","Machine performance-monitoring counter","Upper 32 bits of machine performance-monitoring counter …","Machine performance-monitoring counter","Upper 32 bits of machine performance-monitoring counter …","Machine performance-monitoring counter","Upper 32 bits of machine performance-monitoring counter …","Machine performance-monitoring counter","Upper 32 bits of machine performance-monitoring counter …","Machine performance-monitoring counter","Upper 32 bits of machine performance-monitoring counter …","Machine performance-monitoring counter","Upper 32 bits of machine performance-monitoring counter …","Machine performance-monitoring counter","Upper 32 bits of machine performance-monitoring counter …","Machine performance-monitoring counter","Upper 32 bits of machine performance-monitoring counter …","Machine performance-monitoring counter","Upper 32 bits of machine performance-monitoring counter …","Machine performance-monitoring counter","Upper 32 bits of machine performance-monitoring counter …","Machine performance-monitoring counter","Upper 32 bits of machine performance-monitoring counter …","Machine performance-monitoring counter","Upper 32 bits of machine performance-monitoring counter …","Machine performance-monitoring counter","Upper 32 bits of machine performance-monitoring counter …","Machine performance-monitoring counter","Upper 32 bits of machine performance-monitoring counter …","Machine performance-monitoring counter","Upper 32 bits of machine performance-monitoring counter …","Machine performance-monitoring counter","Upper 32 bits of machine performance-monitoring counter …","Machine performance-monitoring counter","Upper 32 bits of machine performance-monitoring counter …","Machine performance-monitoring counter","Upper 32 bits of machine performance-monitoring counter …","Machine performance-monitoring counter","Upper 32 bits of machine performance-monitoring counter …","Machine performance-monitoring counter","Machine performance-monitoring counter","Upper 32 bits of machine performance-monitoring counter …","Machine performance-monitoring counter","Upper 32 bits of machine performance-monitoring counter …","Upper 32 bits of machine performance-monitoring counter …","Machine performance-monitoring counter","Upper 32 bits of machine performance-monitoring counter …","Machine performance-monitoring counter","Upper 32 bits of machine performance-monitoring counter …","Machine performance-monitoring counter","Upper 32 bits of machine performance-monitoring counter …","Machine performance-monitoring counter","Upper 32 bits of machine performance-monitoring counter …","Machine performance-monitoring counter","Upper 32 bits of machine performance-monitoring counter …","Machine performance-monitoring counter","Upper 32 bits of machine performance-monitoring counter …","Machine performance-monitoring event selector","Machine performance-monitoring event selector","Machine performance-monitoring event selector","Machine performance-monitoring event selector","Machine performance-monitoring event selector","Machine performance-monitoring event selector","Machine performance-monitoring event selector","Machine performance-monitoring event selector","Machine performance-monitoring event selector","Machine performance-monitoring event selector","Machine performance-monitoring event selector","Machine performance-monitoring event selector","Machine performance-monitoring event selector","Machine performance-monitoring event selector","Machine performance-monitoring event selector","Machine performance-monitoring event selector","Machine performance-monitoring event selector","Machine performance-monitoring event selector","Machine performance-monitoring event selector","Machine performance-monitoring event selector","Machine performance-monitoring event selector","Machine performance-monitoring event selector","Machine performance-monitoring event selector","Machine performance-monitoring event selector","Machine performance-monitoring event selector","Machine performance-monitoring event selector","Machine performance-monitoring event selector","Machine performance-monitoring event selector","Machine performance-monitoring event selector","mideleg register","mie register","mimpid register","minstret register","minstreth register","mip register","misa register","mscratch register","mstatus register","mtval register","mtvec register","mvendorid register","Current PMP Permission","Physical memory protection address register","Physical memory protection address register","Physical memory protection address register","Physical memory protection address register","Physical memory protection address register","Physical memory protection address register","Physical memory protection address register","Physical memory protection address register","Physical memory protection address register","Physical memory protection address register","Physical memory protection address register","Physical memory protection address register","Physical memory protection address register","Physical memory protection address register","Physical memory protection address register","Physical memory protection address register","Physical memory protection configuration pmpcfg0 struct …","Physical memory protection configuration pmpcfg2 struct …","Current PMP Range","satp register","scause register","scounteren register","sepc register","sie register","sip register","sscratch register","sstatus register","stval register","stvec register","time register","timeh register","","","","","","","","","","","","","ucause register","uepc register","uie register","uip register","uscratch register","ustatus register","utval register","stvec register","Reads the CSR","Reads the CSR as a 64-bit value","Reads the CSR","Divide by Zero","Floating-point control and status register","Accrued Exception Flag","Accrued Exception Flags","","Invalid Operation","Inexact","Overflow","","","","","","Rounding Mode","Underflow","Returns the contents of the register as raw bits","","","","","","","","","Resets <code>fflags</code> field bit","Resets <code>fflags</code> field bits","","","","","Divide by Zero","","Accrued Exception Flags","","","","","Rounding Mode","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Invalid Operation","Inexact","Overflow","Reads the CSR","Writes the CSR","","","","","","","","","","","","","Underflow","Reads the CSR","Reads the CSR as a 64-bit value","Reads the CSR","Reads the CSR","Reads the CSR as a 64-bit value","Reads the CSR","Reads the CSR","Reads the CSR as a 64-bit value","Reads the CSR","Reads the CSR","Reads the CSR as a 64-bit value","Reads the CSR","Reads the CSR","Reads the CSR as a 64-bit value","Reads the CSR","Reads the CSR","Reads the CSR as a 64-bit value","Reads the CSR","Reads the CSR","Reads the CSR as a 64-bit value","Reads the CSR","Reads the CSR","Reads the CSR as a 64-bit value","Reads the CSR","Reads the CSR","Reads the CSR as a 64-bit value","Reads the CSR","Reads the CSR","Reads the CSR as a 64-bit value","Reads the CSR","Reads the CSR","Reads the CSR as a 64-bit value","Reads the CSR","Reads the CSR","Reads the CSR as a 64-bit value","Reads the CSR","Reads the CSR","Reads the CSR as a 64-bit value","Reads the CSR","Reads the CSR","Reads the CSR as a 64-bit value","Reads the CSR","Reads the CSR","Reads the CSR as a 64-bit value","Reads the CSR","Reads the CSR","Reads the CSR as a 64-bit value","Reads the CSR","Reads the CSR","Reads the CSR as a 64-bit value","Reads the CSR","Reads the CSR","Reads the CSR as a 64-bit value","Reads the CSR","Reads the CSR","Reads the CSR as a 64-bit value","Reads the CSR","Reads the CSR","Reads the CSR as a 64-bit value","Reads the CSR","Reads the CSR","Reads the CSR as a 64-bit value","Reads the CSR","Reads the CSR as a 64-bit value","Reads the CSR","Reads the CSR","Reads the CSR as a 64-bit value","Reads the CSR","Reads the CSR","Reads the CSR","Reads the CSR as a 64-bit value","Reads the CSR","Reads the CSR","Reads the CSR as a 64-bit value","Reads the CSR","Reads the CSR","Reads the CSR as a 64-bit value","Reads the CSR","Reads the CSR","Reads the CSR as a 64-bit value","Reads the CSR","Reads the CSR","Reads the CSR as a 64-bit value","Reads the CSR","Reads the CSR","Reads the CSR as a 64-bit value","Reads the CSR","Reads the CSR","Reads the CSR as a 64-bit value","Reads the CSR","marchid register","Returns the contents of the register as raw bits","","","","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Reads the CSR","","","","","Exception","","","","","","Interrupt","","","","","","","","","mcause register","","","","","","","","Trap Cause","","","","","","","Returns the contents of the register as raw bits","","","","","","","","","Trap Cause","","","","","Returns the code field","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Is trap cause an exception.","Is trap cause an interrupt.","Reads the CSR","","","","","","","","","","","","","mcounteren register","","","Supervisor cycle Enable","","Supervisor instret Enable","Supervisor time Enable","","Supervisor “cycle[h]” Enable","","Returns the argument unchanged.","Supervisor “hpm[x]” Enable (bits 3-31)","Calls <code>U::from(self)</code>.","Supervisor “instret[h]” Enable","Reads the CSR","Supervisor cycle Enable","","Supervisor instret Enable","Supervisor time Enable","Supervisor “time[h]” Enable","","","","Reads the CSR","Reads the CSR as a 64-bit value","Reads the CSR","medeleg register","Returns the contents of the register as raw bits","","","Breakpoint Delegate","Breakpoint Delegate","Illegal Instruction Delegate","Instruction Access Fault Delegate","Instruction Address Misaligned Delegate","Instruction Page Fault Delegate","Load Access Fault Delegate","Load Address Misaligned Delegate","Load Page Fault Delegate","Environment Call from M-mode Delegate","Store/AMO Access fault","Store/AMO Address Misaligned Delegate","Store/AMO Page Fault Delegate","Environment Call from S-mode Delegate","Environment Call from U-mode Delegate","","","Returns the argument unchanged.","Illegal Instruction Delegate","Instruction Access Fault Delegate","Instruction Address Misaligned Delegate","Instruction Page Fault Delegate","Calls <code>U::from(self)</code>.","Load Access Fault Delegate","Load Address Misaligned Delegate","Load Page Fault Delegate","Environment Call from M-mode Delegate","Reads the CSR","Breakpoint Delegate","Illegal Instruction Delegate","Instruction Access Fault Delegate","Instruction Address Misaligned Delegate","Instruction Page Fault Delegate","Load Access Fault Delegate","Load Address Misaligned Delegate","Load Page Fault Delegate","Environment Call from M-mode Delegate","Store/AMO Access fault","Store/AMO Address Misaligned Delegate","Store/AMO Page Fault Delegate","Environment Call from S-mode Delegate","Environment Call from U-mode Delegate","Store/AMO Access Fault Delegate","Store/AMO Address Misaligned Delegate","Store/AMO Page Fault Delegate","Environment Call from S-mode Delegate","","","","Environment Call from U-mode Delegate","Reads the CSR","Writes the CSR","Reads the CSR","Reads the CSR","Reads the CSR as a 64-bit value","Writes the CSR","Reads the CSR","Writes the CSR","Reads the CSR","Reads the CSR as a 64-bit value","Writes the CSR","Reads the CSR","Writes the CSR","Reads the CSR","Reads the CSR as a 64-bit value","Writes the CSR","Reads the CSR","Writes the CSR","Reads the CSR","Reads the CSR as a 64-bit value","Writes the CSR","Reads the CSR","Writes the CSR","Reads the CSR","Reads the CSR as a 64-bit value","Writes the CSR","Reads the CSR","Writes the CSR","Reads the CSR","Reads the CSR as a 64-bit value","Writes the CSR","Reads the CSR","Writes the CSR","Reads the CSR","Reads the CSR as a 64-bit value","Writes the CSR","Reads the CSR","Writes the CSR","Reads the CSR","Reads the CSR as a 64-bit value","Writes the CSR","Reads the CSR","Writes the CSR","Reads the CSR","Reads the CSR as a 64-bit value","Writes the CSR","Reads the CSR","Writes the CSR","Reads the CSR","Reads the CSR as a 64-bit value","Writes the CSR","Reads the CSR","Writes the CSR","Reads the CSR","Reads the CSR as a 64-bit value","Writes the CSR","Reads the CSR","Writes the CSR","Reads the CSR","Reads the CSR as a 64-bit value","Writes the CSR","Reads the CSR","Writes the CSR","Reads the CSR","Reads the CSR as a 64-bit value","Writes the CSR","Reads the CSR","Writes the CSR","Reads the CSR","Reads the CSR as a 64-bit value","Writes the CSR","Reads the CSR","Writes the CSR","Reads the CSR","Reads the CSR as a 64-bit value","Writes the CSR","Reads the CSR","Writes the CSR","Reads the CSR","Reads the CSR as a 64-bit value","Writes the CSR","Reads the CSR","Writes the CSR","Reads the CSR","Reads the CSR as a 64-bit value","Writes the CSR","Reads the CSR","Writes the CSR","Reads the CSR","Reads the CSR as a 64-bit value","Writes the CSR","Reads the CSR","Writes the CSR","Reads the CSR","Reads the CSR as a 64-bit value","Writes the CSR","Reads the CSR","Writes the CSR","Reads the CSR","Reads the CSR as a 64-bit value","Writes the CSR","Reads the CSR","Writes the CSR","Reads the CSR","Reads the CSR as a 64-bit value","Writes the CSR","Reads the CSR","Reads the CSR as a 64-bit value","Writes the CSR","Reads the CSR","Writes the CSR","Reads the CSR","Reads the CSR as a 64-bit value","Writes the CSR","Reads the CSR","Writes the CSR","Reads the CSR","Writes the CSR","Reads the CSR","Reads the CSR as a 64-bit value","Writes the CSR","Reads the CSR","Writes the CSR","Reads the CSR","Reads the CSR as a 64-bit value","Writes the CSR","Reads the CSR","Writes the CSR","Reads the CSR","Reads the CSR as a 64-bit value","Writes the CSR","Reads the CSR","Writes the CSR","Reads the CSR","Reads the CSR as a 64-bit value","Writes the CSR","Reads the CSR","Writes the CSR","Reads the CSR","Reads the CSR as a 64-bit value","Writes the CSR","Reads the CSR","Writes the CSR","Reads the CSR","Reads the CSR as a 64-bit value","Writes the CSR","Reads the CSR","Writes the CSR","Reads the CSR","Writes the CSR","Reads the CSR","Writes the CSR","Reads the CSR","Writes the CSR","Reads the CSR","Writes the CSR","Reads the CSR","Writes the CSR","Reads the CSR","Writes the CSR","Reads the CSR","Writes the CSR","Reads the CSR","Writes the CSR","Reads the CSR","Writes the CSR","Reads the CSR","Writes the CSR","Reads the CSR","Writes the CSR","Reads the CSR","Writes the CSR","Reads the CSR","Writes the CSR","Reads the CSR","Writes the CSR","Reads the CSR","Writes the CSR","Reads the CSR","Writes the CSR","Reads the CSR","Writes the CSR","Reads the CSR","Writes the CSR","Reads the CSR","Writes the CSR","Reads the CSR","Writes the CSR","Reads the CSR","Writes the CSR","Reads the CSR","Writes the CSR","Reads the CSR","Writes the CSR","Reads the CSR","Writes the CSR","Reads the CSR","Writes the CSR","Reads the CSR","Writes the CSR","Reads the CSR","Writes the CSR","Reads the CSR","Writes the CSR","Reads the CSR","Writes the CSR","mideleg register","Returns the contents of the register as raw bits","","","Supervisor External Interrupt Delegate","Supervisor Software Interrupt Delegate","Supervisor Timer Interrupt Delegate","User External Interrupt Delegate","User Software Interrupt Delegate","User Timer Interrupt Delegate","","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Reads the CSR","Supervisor External Interrupt Delegate","Supervisor Software Interrupt Delegate","Supervisor Timer Interrupt Delegate","User External Interrupt Delegate","User Software Interrupt Delegate","User Timer Interrupt Delegate","Supervisor External Interrupt Delegate","Supervisor Software Interrupt Delegate","Supervisor Timer Interrupt Delegate","","","","User External Interrupt Delegate","User Software Interrupt Delegate","User Timer Interrupt Delegate","mie register","Returns the contents of the register as raw bits","","","Machine External Interrupt Enable","Machine Software Interrupt Enable","Machine Timer Interrupt Enable","Supervisor External Interrupt Enable","Supervisor Software Interrupt Enable","Supervisor Timer Interrupt Enable","User External Interrupt Enable","User Software Interrupt Enable","User Timer Interrupt Enable","","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Machine External Interrupt Enable","Machine Software Interrupt Enable","Machine Timer Interrupt Enable","Reads the CSR","Machine External Interrupt Enable","Machine Software Interrupt Enable","Machine Timer Interrupt Enable","Supervisor External Interrupt Enable","Supervisor Software Interrupt Enable","Supervisor Timer Interrupt Enable","User External Interrupt Enable","User Software Interrupt Enable","User Timer Interrupt Enable","Supervisor External Interrupt Enable","Supervisor Software Interrupt Enable","Supervisor Timer Interrupt Enable","","","","User External Interrupt Enable","User Software Interrupt Enable","User Timer Interrupt Enable","mimpid register","Returns the contents of the register as raw bits","","","","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Reads the CSR","","","","Reads the CSR","Reads the CSR as a 64-bit value","Reads the CSR","mip register","Returns the contents of the register as raw bits","","","Machine Software Interrupt Pending","Machine Timer Interrupt Pending","Supervisor External Interrupt Pending","Supervisor Software Interrupt Pending","Supervisor Timer Interrupt Pending","User External Interrupt Pending","User Software Interrupt Pending","User Timer Interrupt Pending","","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Machine External Interrupt Pending","Machine Software Interrupt Pending","Machine Timer Interrupt Pending","Reads the CSR","Machine Software Interrupt Pending","Machine Timer Interrupt Pending","Supervisor External Interrupt Pending","Supervisor Software Interrupt Pending","Supervisor Timer Interrupt Pending","User External Interrupt Pending","User Software Interrupt Pending","User Timer Interrupt Pending","Supervisor External Interrupt Pending","Supervisor Software Interrupt Pending","Supervisor Timer Interrupt Pending","","","","User External Interrupt Pending","User Software Interrupt Pending","User Timer Interrupt Pending","Machine XLEN","misa register","","","","Returns the contents of the register as raw bits","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns true when the atomic extension is implemented.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Returns the machine xlen.","Reads the CSR","","","","","","","Reads the CSR","Writes the CSR","All off","","","Floating-point extension state","","Machine Previous Privilege Mode","","mstatus register","None dirty or clean, some on","None dirty, some clean","","Supervisor Previous Privilege Mode","Some dirty","","","","","Additional extension state","","","","","","","","","","","Machine Interrupt Enable","Modify Memory PRiVilege","Make eXecutable Readable","Supervisor Interrupt Enable","Permit Supervisor User Memory access","Trap SRET","Trap Virtual Memory","Timeout Wait","User Interrupt Enable","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Floating-point extension state","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Machine Interrupt Enable","Machine Previous Interrupt Enable","Machine Previous Privilege Mode","Modify Memory PRiVilege","Make eXecutable Readable","Reads the CSR","Whether either the FS field or XS field signals the …","Floating-point extension state","Machine Interrupt Enable","Machine Previous Interrupt Enable","Machine Previous Privilege Mode","Modify Memory PRiVilege","Make eXecutable Readable","Supervisor Interrupt Enable","Supervisor Previous Interrupt Enable","Supervisor Previous Privilege Mode","Permit Supervisor User Memory access","Trap SRET","Trap Virtual Memory","Timeout Wait","User Interrupt Enable","User Previous Interrupt Enable","Supervisor Interrupt Enable","Supervisor Previous Interrupt Enable","Supervisor Previous Privilege Mode","Permit Supervisor User Memory access","","","","","","","","","","","Trap SRET","Trap Virtual Memory","Timeout Wait","","","","","","User Interrupt Enable","User Previous Interrupt Enable","Additional extension state","Reads the CSR","","mtvec register","Trap mode","","Returns the trap-vector base-address","Returns the contents of the register as raw bits","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Reads the CSR","Returns the trap-vector mode","","","","","","","Writes the CSR","mvendorid register","Returns the contents of the register as raw bits","","","","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Returns the JEDEC manufacturer ID","Reads the CSR","","","","Reads the CSR","Writes the CSR","Reads the CSR","Writes the CSR","Reads the CSR","Writes the CSR","Reads the CSR","Writes the CSR","Reads the CSR","Writes the CSR","Reads the CSR","Writes the CSR","Reads the CSR","Writes the CSR","Reads the CSR","Writes the CSR","Reads the CSR","Writes the CSR","Reads the CSR","Writes the CSR","Reads the CSR","Writes the CSR","Reads the CSR","Writes the CSR","Reads the CSR","Writes the CSR","Reads the CSR","Writes the CSR","Reads the CSR","Writes the CSR","Reads the CSR","Writes the CSR","Clear the pmp configuration corresponding to the index","Reads the CSR","Set the pmp configuration corresponding to the index","Writes the CSR","Clear the pmp configuration corresponding to the index","Reads the CSR","Set the pmp configuration corresponding to the index","Writes the CSR","No translation or protection","64-bit satp mode","satp register","Page-based 39-bit virtual addressing","Page-based 48-bit virtual addressing","Page-based 57-bit virtual addressing","Page-based 64-bit virtual addressing","Address space identifier","Returns the contents of the register as raw bits","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Current address-translation scheme","Physical page number","Reads the CSR","Sets the register to corresponding page table mode, …","","","","","","","Writes the CSR","","Exception","","","","","","Interrupt","","","","scause register","","","","","","","Trap Cause","","","","","","","Returns the contents of the register as raw bits","","","","","","","","","Trap Cause","","","","","Returns the code field","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Is trap cause an exception.","Is trap cause an interrupt.","Reads the CSR","Set supervisor cause register to corresponding cause.","","","","","","","","","","","","","Writes the CSR","scounteren register","","","User cycle Enable","","User instret Enable","User time Enable","","User “cycle[h]” Enable","","Returns the argument unchanged.","User “hpm[x]” Enable (bits 3-31)","Calls <code>U::from(self)</code>.","User “instret[h]&quot; Enable","Reads the CSR","User cycle Enable","","User instret Enable","User time Enable","User “time[h]” Enable","","","","Reads the CSR","Writes the CSR","sie register","Returns the contents of the register as raw bits","","","Supervisor External Interrupt Enable","Supervisor Software Interrupt Enable","Supervisor Timer Interrupt Enable","User External Interrupt Enable","User Software Interrupt Enable","User Timer Interrupt Enable","","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Reads the CSR","Supervisor External Interrupt Enable","Supervisor Software Interrupt Enable","Supervisor Timer Interrupt Enable","User External Interrupt Enable","User Software Interrupt Enable","User Timer Interrupt Enable","Supervisor External Interrupt Enable","Supervisor Software Interrupt Enable","Supervisor Timer Interrupt Enable","","","","User External Interrupt Enable","User Software Interrupt Enable","User Timer Interrupt Enable","sip register","Returns the contents of the register as raw bits","","","","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Reads the CSR","Supervisor External Interrupt Pending","Supervisor Software Interrupt Pending","Supervisor Timer Interrupt Pending","","","","User External Interrupt Pending","User Software Interrupt Pending","User Timer Interrupt Pending","Reads the CSR","Writes the CSR","","Supervisor Previous Privilege Mode","Supervisor Status Register","","","","","","","Make eXecutable Readable","Supervisor Interrupt Enable","Permit Supervisor User Memory access","User Interrupt Enable","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","The status of the floating-point unit","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Make eXecutable Readable","Reads the CSR","Whether either the FS field or XS field signals the …","The status of the floating-point unit","Make eXecutable Readable","Supervisor Interrupt Enable","Supervisor Previous Interrupt Enable","Supervisor Previous Privilege Mode","Permit Supervisor User Memory access","User Interrupt Enable","User Previous Interrupt Enable","Supervisor Interrupt Enable","Supervisor Previous Interrupt Enable","Supervisor Previous Privilege Mode","Permit Supervisor User Memory access","","","","","","","User Interrupt Enable","User Previous Interrupt Enable","The status of additional user-mode extensions and …","Reads the CSR","Writes the CSR","stvec register","","Returns the trap-vector base-address","Returns the contents of the register as raw bits","","","","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Reads the CSR","Returns the trap-vector mode","","","","Writes the CSR","Reads the CSR","Reads the CSR as a 64-bit value","Reads the CSR","ucause register","Returns the contents of the register as raw bits","","","","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Reads the CSR","","","","Writes the CSR","Reads the CSR","Writes the CSR","uie register","Returns the contents of the register as raw bits","","","User External Interrupt Enable","User Software Interrupt Enable","User Timer Interrupt Enable","","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Reads the CSR","User External Interrupt Enable","User Software Interrupt Enable","User Timer Interrupt Enable","","","","User External Interrupt Enable","User Software Interrupt Enable","User Timer Interrupt Enable","uip register","Returns the contents of the register as raw bits","","","","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Reads the CSR","","","","User External Interrupt Pending","User Software Interrupt Pending","User Timer Interrupt Pending","Reads the CSR","Writes the CSR","ustatus register","","","User Interrupt Enable","","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Reads the CSR","User Interrupt Enable","User Previous Interrupt Enable","","","","User Interrupt Enable","User Previous Interrupt Enable","Reads the CSR","Writes the CSR","","stvec register","Returns the trap-vector base-address","Returns the contents of the register as raw bits","","","","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Reads the CSR","Returns the trap-vector mode","","","","Writes the CSR"],"i":[0,0,0,0,0,0,0,0,0,0,0,0,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,0,0,11,10,10,11,10,11,0,0,11,10,0,11,10,10,11,10,10,11,10,11,10,11,10,11,10,15,15,14,15,0,0,0,14,14,14,14,0,15,14,14,14,18,18,14,15,16,18,14,15,16,16,14,15,16,0,0,0,14,15,16,18,14,15,16,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,18,14,15,16,18,16,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,16,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,16,0,0,0,0,0,0,0,0,0,0,0,0,18,14,15,16,18,14,15,16,18,14,15,16,0,0,0,0,0,0,0,0,0,0,0,20,0,0,0,22,20,20,20,22,22,22,22,22,0,20,19,19,21,20,22,19,21,20,22,0,0,19,21,20,22,21,22,19,19,21,20,22,19,19,21,20,22,19,21,20,22,21,21,21,0,0,19,21,20,22,19,21,20,22,19,21,20,22,21,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,24,24,24,24,24,24,24,0,24,24,24,29,0,27,29,29,29,29,0,27,29,29,29,29,28,28,28,0,29,29,29,29,28,28,28,0,28,29,29,28,28,28,26,26,27,28,29,26,27,28,29,26,26,27,28,29,26,27,28,29,26,27,28,29,26,27,28,28,29,29,26,27,28,29,26,26,0,26,27,28,29,26,27,28,29,26,27,28,29,0,30,30,0,0,0,0,30,30,30,30,30,30,30,0,0,0,0,0,30,30,30,30,0,0,0,0,31,31,31,31,0,0,0,0,0,0,0,0,0,0,0,0,0,0,31,31,31,31,31,31,31,31,31,31,31,31,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,31,31,31,31,31,31,31,31,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,32,32,32,0,0,0,0,0,0,32,32,32,32,0,0,0,0,0,0,0,32,32,32,32,32,32,32,32,32,0,33,33,33,0,0,0,0,0,0,0,0,0,33,33,33,33,33,33,33,0,0,0,0,0,0,0,0,0,0,33,33,33,33,33,33,33,33,33,0,34,34,34,34,34,34,34,0,34,34,34,0,0,0,0,35,35,35,0,0,0,0,0,0,0,0,35,35,35,35,35,35,35,0,0,0,0,0,0,0,0,0,35,35,35,35,35,35,35,35,35,0,0,37,37,37,36,36,37,36,37,36,37,37,36,37,36,37,36,36,37,36,0,36,37,36,37,36,37,0,0,40,41,41,0,41,0,42,0,40,40,41,0,40,42,43,42,43,0,39,40,41,42,43,39,40,41,42,43,0,0,0,0,0,0,0,0,0,39,40,41,42,43,40,41,42,43,39,40,41,42,43,39,40,41,42,43,39,39,40,41,42,43,39,39,39,39,39,0,39,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,39,39,39,39,39,40,41,42,43,39,40,41,42,43,39,39,39,39,40,41,42,43,39,39,39,0,45,0,0,45,44,44,44,45,44,45,44,45,45,44,45,44,45,44,45,0,44,44,45,44,45,44,45,0,0,46,46,46,46,46,46,46,46,0,46,46,46,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,48,0,0,48,48,48,48,47,47,47,48,47,48,47,48,48,47,48,47,48,47,48,47,47,0,0,47,48,47,48,47,48,0,52,0,50,52,52,52,52,0,50,52,52,0,52,52,52,51,51,51,0,51,52,52,51,51,51,49,49,50,51,52,49,50,51,52,49,49,50,51,52,49,50,51,52,50,51,52,49,50,51,51,52,52,49,50,51,52,49,49,0,0,49,50,51,52,49,50,51,52,49,50,51,52,0,0,53,53,0,0,0,0,53,53,53,53,53,53,53,0,0,0,0,0,53,53,53,53,0,0,0,54,54,54,0,0,0,0,0,0,54,54,54,54,0,0,0,0,0,0,0,54,54,54,54,54,54,54,54,54,0,55,55,55,55,55,55,55,0,55,55,55,55,55,55,55,55,55,0,0,0,0,0,57,57,56,57,56,57,0,0,0,0,56,57,57,56,57,56,57,56,56,57,56,0,56,0,0,0,0,0,0,0,0,56,56,56,56,56,57,56,57,56,57,56,56,56,0,0,0,0,58,58,58,58,58,58,58,58,0,58,58,58,58,0,0,0,0,0,59,59,59,59,59,59,59,0,59,59,59,0,0,0,0,60,60,60,0,0,0,60,60,60,60,0,0,0,0,60,60,60,60,60,60,0,61,61,61,61,61,61,61,0,61,61,61,61,61,61,0,0,0,62,62,0,62,62,62,62,0,0,0,62,62,62,62,62,0,0,0,0,63,63,63,63,63,63,63,63,0,63,63,63,63,0],"f":[0,0,0,0,0,[1],[[]],[[]],[[2,2]],[[]],[[]],0,[[]],[[]],[3,3],[[3,4]],[[3,1]],[[3,5]],[[3,6]],[[3,5]],[[3,1]],[[3,6]],[[3,4]],[[3,7]],[[]],[[]],[1,3],[[],8],[[],8],[[],9],0,0,[[]],[[10,11]],[[]],[[]],[[]],[11,11],[[]],[[]],[[11,12],[[8,[13]]]],[[10,12],[[8,[13]]]],[[]],[[]],[[]],[10],[[]],[[]],[10],[[],11],[[],10],[[],8],[[],8],[[],8],[[],8],[[],9],[[],9],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,[14,14],[15,15],[16,16],0,0,0,[[14,12],17],[[15,12],17],[[16,12],17],[[]],[[]],[[]],[[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[18,2],16],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],9],[[],9],[[],9],[[],9],0,0,0,0,0,0,0,0,[[],2],[[],7],[[],2],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[19,1],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[20],[[]],[19,19],[21,21],[20,20],[22,22],[21,23],[[22,22],23],[19,21],[[19,12],17],[[21,12],17],[[20,12],17],[[22,12],17],[19,22],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[21,23],[21,23],[21,23],[[],19],[22],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],9],[[],9],[[],9],[[],9],[21,23],[[],2],[[],7],[[],2],[[],2],[[],7],[[],2],[[],2],[[],7],[[],2],[[],2],[[],7],[[],2],[[],2],[[],7],[[],2],[[],2],[[],7],[[],2],[[],2],[[],7],[[],2],[[],2],[[],7],[[],2],[[],2],[[],7],[[],2],[[],2],[[],7],[[],2],[[],2],[[],7],[[],2],[[],2],[[],7],[[],2],[[],2],[[],7],[[],2],[[],2],[[],7],[[],2],[[],2],[[],7],[[],2],[[],2],[[],7],[[],2],[[],2],[[],7],[[],2],[[],2],[[],7],[[],2],[[],2],[[],7],[[],2],[[],2],[[],7],[[],2],[[],2],[[],7],[[],2],[[],7],[[],2],[[],2],[[],7],[[],2],[[],2],[[],2],[[],7],[[],2],[[],2],[[],7],[[],2],[[],2],[[],7],[[],2],[[],2],[[],7],[[],2],[[],2],[[],7],[[],2],[[],2],[[],7],[[],2],[[],2],[[],7],[[],2],0,[24,2],[[]],[[]],[24,24],[[24,12],17],[[]],[[]],[[],[[25,[24]]]],[[],8],[[],8],[[],9],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[26,2],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[26,27],[26,26],[27,27],[28,28],[29,29],[26,2],[[27,27],23],[[28,28],23],[[29,29],23],[[26,12],17],[[27,12],17],[[28,12],17],[[29,12],17],[[]],[[]],[[]],[2,28],[2,29],[[]],[[]],[[]],[[]],[[]],[26,23],[26,23],[[],26],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],9],[[],9],[[],9],[[],9],0,[[]],[[]],[[]],[2],[[]],[[]],[30,30],[30,23],[[30,12],17],[[]],[[30,2],23],[[]],[30,23],[[],30],[[]],[2],[[]],[[]],[30,23],[[],8],[[],8],[[],9],[[],2],[[],7],[[],2],0,[31,2],[[]],[[]],[31,23],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[31,31],[[31,12],17],[[]],[31,23],[31,23],[31,23],[31,23],[[]],[31,23],[31,23],[31,23],[31,23],[[],31],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[31,23],[31,23],[31,23],[31,23],[[],8],[[],8],[[],9],[31,23],[[],2],[2],[[],2],[[],2],[[],7],[2],[[],2],[2],[[],2],[[],7],[2],[[],2],[2],[[],2],[[],7],[2],[[],2],[2],[[],2],[[],7],[2],[[],2],[2],[[],2],[[],7],[2],[[],2],[2],[[],2],[[],7],[2],[[],2],[2],[[],2],[[],7],[2],[[],2],[2],[[],2],[[],7],[2],[[],2],[2],[[],2],[[],7],[2],[[],2],[2],[[],2],[[],7],[2],[[],2],[2],[[],2],[[],7],[2],[[],2],[2],[[],2],[[],7],[2],[[],2],[2],[[],2],[[],7],[2],[[],2],[2],[[],2],[[],7],[2],[[],2],[2],[[],2],[[],7],[2],[[],2],[2],[[],2],[[],7],[2],[[],2],[2],[[],2],[[],7],[2],[[],2],[2],[[],2],[[],7],[2],[[],2],[2],[[],2],[[],7],[2],[[],2],[2],[[],2],[[],7],[2],[[],2],[2],[[],2],[[],7],[2],[[],2],[[],7],[2],[[],2],[2],[[],2],[[],7],[2],[[],2],[2],[[],2],[2],[[],2],[[],7],[2],[[],2],[2],[[],2],[[],7],[2],[[],2],[2],[[],2],[[],7],[2],[[],2],[2],[[],2],[[],7],[2],[[],2],[2],[[],2],[[],7],[2],[[],2],[2],[[],2],[[],7],[2],[[],2],[2],[[],2],[2],[[],2],[2],[[],2],[2],[[],2],[2],[[],2],[2],[[],2],[2],[[],2],[2],[[],2],[2],[[],2],[2],[[],2],[2],[[],2],[2],[[],2],[2],[[],2],[2],[[],2],[2],[[],2],[2],[[],2],[2],[[],2],[2],[[],2],[2],[[],2],[2],[[],2],[2],[[],2],[2],[[],2],[2],[[],2],[2],[[],2],[2],[[],2],[2],[[],2],[2],[[],2],[2],[[],2],[2],[[],2],[2],0,[32,2],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[32,32],[[32,12],17],[[]],[[]],[[],32],[[]],[[]],[[]],[[]],[[]],[[]],[32,23],[32,23],[32,23],[[],8],[[],8],[[],9],[32,23],[32,23],[32,23],0,[33,2],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[33,33],[[33,12],17],[[]],[[]],[33,23],[33,23],[33,23],[[],33],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[33,23],[33,23],[33,23],[[],8],[[],8],[[],9],[33,23],[33,23],[33,23],0,[34,2],[[]],[[]],[34,34],[[34,12],17],[[]],[[]],[[],[[25,[34]]]],[[],8],[[],8],[[],9],[[],2],[[],7],[[],2],0,[35,2],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[35,35],[[35,12],17],[[]],[[]],[35,23],[35,23],[35,23],[[],35],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[35,23],[35,23],[35,23],[[],8],[[],8],[[],9],[35,23],[35,23],[35,23],0,0,0,0,0,[36,2],[[]],[[]],[[]],[[]],[36,36],[37,37],[[37,37],23],[[36,12],17],[[37,12],17],[[]],[[]],[[36,38],23],[[]],[[]],[36,37],[[],[[25,[36]]]],[[],8],[[],8],[[],8],[[],8],[[],9],[[],9],[[],2],[2],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[39,39],[40,40],[41,41],[42,42],[43,43],[[40,40],23],[[41,41],23],[[42,42],23],[[43,43],23],[[39,12],17],[[40,12],17],[[41,12],17],[[42,12],17],[[43,12],17],[[]],[[]],[[]],[[]],[[]],[39,41],[[]],[[]],[[]],[[]],[[]],[39,23],[39,23],[39,42],[39,23],[39,23],[[],39],[39,23],[41],[[]],[[]],[42],[[]],[[]],[[]],[[]],[43],[[]],[[]],[[]],[[]],[[]],[[]],[39,23],[39,23],[39,43],[39,23],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[39,23],[39,23],[39,23],[[],9],[[],9],[[],9],[[],9],[[],9],[39,23],[39,23],[39,40],[[],2],0,0,0,0,[44,2],[44,2],[[]],[[]],[[]],[[]],[44,44],[45,45],[[45,45],23],[[44,12],17],[[45,12],17],[[]],[[]],[[]],[[]],[[],44],[44,[[25,[45]]]],[[],8],[[],8],[[],8],[[],8],[[],9],[[],9],[[2,45]],0,[46,2],[[]],[[]],[46,46],[[46,12],17],[[]],[[]],[46,2],[[],[[25,[46]]]],[[],8],[[],8],[[],9],[[],2],[2],[[],2],[2],[[],2],[2],[[],2],[2],[[],2],[2],[[],2],[2],[[],2],[2],[[],2],[2],[[],2],[2],[[],2],[2],[[],2],[2],[[],2],[2],[[],2],[2],[[],2],[2],[[],2],[2],[[],2],[2],[2],[[],18],[[2,15,14,23]],[2],[2],[[],18],[[2,15,14,23]],[2],0,0,0,0,0,0,0,[47,2],[47,2],[[]],[[]],[[]],[[]],[47,47],[48,48],[[48,48],23],[[47,12],17],[[48,12],17],[[]],[[]],[[]],[[]],[47,48],[47,2],[[],47],[[48,2,2]],[[],8],[[],8],[[],8],[[],8],[[],9],[[],9],[2],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[49,2],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[49,50],[49,49],[50,50],[51,51],[52,52],[49,2],[[50,50],23],[[51,51],23],[[52,52],23],[[50,12],17],[[51,12],17],[[52,12],17],[[]],[[]],[2,51],[[]],[[]],[2,52],[[]],[[]],[[]],[[]],[49,23],[49,23],[[],49],[50],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],9],[[],9],[[],9],[[],9],[2],0,[[]],[[]],[[]],[2],[[]],[[]],[53,53],[53,23],[[53,12],17],[[]],[[53,2],23],[[]],[53,23],[[],53],[[]],[2],[[]],[[]],[53,23],[[],8],[[],8],[[],9],[[],2],[2],0,[54,2],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[54,54],[[54,12],17],[[]],[[]],[[],54],[[]],[[]],[[]],[[]],[[]],[[]],[54,23],[54,23],[54,23],[[],8],[[],8],[[],9],[54,23],[54,23],[54,23],0,[55,2],[[]],[[]],[55,55],[[55,12],17],[[]],[[]],[[],55],[55,23],[55,23],[55,23],[[],8],[[],8],[[],9],[55,23],[55,23],[55,23],[[],2],[2],0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[56,56],[57,57],[[57,57],23],[[56,12],17],[[57,12],17],[[]],[[]],[56,41],[[]],[[]],[56,23],[[],56],[56,23],[41],[[]],[[]],[[]],[57],[[]],[[]],[[]],[56,23],[56,23],[56,57],[56,23],[[],8],[[],8],[[],8],[[],8],[[],9],[[],9],[56,23],[56,23],[56,41],[[],2],[2],0,0,[58,2],[58,2],[[]],[[]],[58,58],[[58,12],17],[[]],[[]],[[],58],[58,[[25,[45]]]],[[],8],[[],8],[[],9],[[2,45]],[[],2],[[],7],[[],2],0,[59,2],[[]],[[]],[59,59],[[59,12],17],[[]],[[]],[[],59],[[],8],[[],8],[[],9],[2],[[],2],[2],0,[60,2],[[]],[[]],[[]],[[]],[[]],[60,60],[[60,12],17],[[]],[[]],[[],60],[[]],[[]],[[]],[[],8],[[],8],[[],9],[60,23],[60,23],[60,23],0,[61,2],[[]],[[]],[61,61],[[61,12],17],[[]],[[]],[[],61],[[],8],[[],8],[[],9],[61,23],[61,23],[61,23],[[],2],[2],0,[[]],[[]],[[]],[62,62],[[62,12],17],[[]],[[]],[[],62],[[]],[[]],[[],8],[[],8],[[],9],[62,23],[62,23],[[],2],[2],0,0,[63,2],[63,2],[[]],[[]],[63,63],[[63,12],17],[[]],[[]],[[],63],[63,[[25,[45]]]],[[],8],[[],8],[[],9],[[2,45]]],"p":[[15,"u32"],[15,"usize"],[3,"McycleDelay"],[15,"u8"],[15,"i32"],[15,"u16"],[15,"u64"],[4,"Result"],[3,"TypeId"],[3,"Mutex"],[3,"CriticalSection"],[3,"Formatter"],[3,"Error"],[4,"Permission"],[4,"Range"],[3,"Pmp"],[6,"Result"],[3,"Pmpcsr"],[3,"FCSR"],[4,"Flag"],[3,"Flags"],[4,"RoundingMode"],[15,"bool"],[3,"Marchid"],[4,"Option"],[3,"Mcause"],[4,"Trap"],[4,"Interrupt"],[4,"Exception"],[3,"Mcounteren"],[3,"Medeleg"],[3,"Mideleg"],[3,"Mie"],[3,"Mimpid"],[3,"Mip"],[3,"Misa"],[4,"MXL"],[15,"char"],[3,"Mstatus"],[4,"XS"],[4,"FS"],[4,"MPP"],[4,"SPP"],[3,"Mtvec"],[4,"TrapMode"],[3,"Mvendorid"],[3,"Satp"],[4,"Mode"],[3,"Scause"],[4,"Trap"],[4,"Interrupt"],[4,"Exception"],[3,"Scounteren"],[3,"Sie"],[3,"Sip"],[3,"Sstatus"],[4,"SPP"],[3,"Stvec"],[3,"Ucause"],[3,"Uie"],[3,"Uip"],[3,"Ustatus"],[3,"Utvec"]]},\
"scopeguard":{"doc":"A scope guard will run a given closure when it goes out of …","t":[4,3,8,11,11,11,11,14,11,11,11,11,11,11,11,5,11,11,11,10,11,11,11,11,11,11,11,11],"n":["Always","ScopeGuard","Strategy","borrow","borrow","borrow_mut","borrow_mut","defer","deref","deref_mut","drop","fmt","fmt","from","from","guard","into","into","into_inner","should_run","should_run","try_from","try_from","try_into","try_into","type_id","type_id","with_strategy"],"q":["scopeguard","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"d":["Always run on scope exit.","<code>ScopeGuard</code> is a scope guard that may own a protected value.","Controls in which cases the associated code should be run","","","","","Macro to create a <code>ScopeGuard</code> (always run).","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Create a new <code>ScopeGuard</code> owning <code>v</code> and with deferred closure …","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","“Defuse” the guard and extract the value without …","Return <code>true</code> if the guard’s associated code should run …","","","","","","","","Create a <code>ScopeGuard</code> that owns <code>v</code> (accessible through deref) …"],"i":[0,0,0,1,4,1,4,0,1,1,1,1,4,1,4,0,1,4,1,8,4,1,4,1,4,1,4,1],"f":[0,0,0,[[]],[[]],[[]],[[]],0,[1],[1],[1],[[1,2],3],[[4,2],3],[[]],[[]],[[],[[1,[4]]]],[[]],[[]],[1],[[],5],[[],5],[[],6],[[],6],[[],6],[[],6],[[],7],[[],7],[[],1]],"p":[[3,"ScopeGuard"],[3,"Formatter"],[6,"Result"],[4,"Always"],[15,"bool"],[4,"Result"],[3,"TypeId"],[8,"Strategy"]]},\
"spin":{"doc":"This crate provides spin-based versions of the primitives …","t":[6,6,6,2,6,2,6,2,6,6,2,0,0,0,0,0,0,0,3,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,3,11,11,11,11,11,11,11,11,11,11,11,11,11,6,6,6,6,6,6,3,3,2,2,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,0,11,11,11,11,11,11,11,11,11,3,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,18,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,3,8,3,11,11,11,11,11,11,11,11,10,11,11,11,11,11,11,11,11,3,3,3,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11],"n":["Barrier","Lazy","Mutex","MutexGuard","Once","RelaxStrategy","RwLock","RwLockReadGuard","RwLockUpgradableGuard","RwLockWriteGuard","Spin","barrier","lazy","lock_api","mutex","once","relax","rwlock","Barrier","BarrierWaitResult","borrow","borrow","borrow_mut","borrow_mut","from","from","into","into","is_leader","new","try_from","try_from","try_into","try_into","type_id","type_id","wait","Lazy","as_mut_ptr","borrow","borrow_mut","default","deref","fmt","force","from","into","new","try_from","try_into","type_id","Mutex","MutexGuard","RwLock","RwLockReadGuard","RwLockUpgradableReadGuard","RwLockWriteGuard","Mutex","MutexGuard","SpinMutex","SpinMutexGuard","borrow","borrow","borrow_mut","borrow_mut","default","deref","deref_mut","fmt","fmt","fmt","force_unlock","from","from","from","from","get_mut","into","into","into_inner","is_locked","is_locked","leak","lock","lock","new","spin","try_from","try_from","try_into","try_into","try_lock","try_lock","type_id","type_id","unlock","SpinMutex","SpinMutexGuard","as_mut_ptr","borrow","borrow","borrow_mut","borrow_mut","default","deref","deref_mut","drop","fmt","fmt","fmt","force_unlock","from","from","from","from","get_mut","into","into","into_inner","is_locked","is_locked","leak","lock","lock","new","try_from","try_from","try_into","try_into","try_lock","try_lock","type_id","type_id","unlock","INIT","Once","as_mut_ptr","borrow","borrow_mut","call_once","default","drop","fmt","from","from","from","get","get_mut","get_mut_unchecked","get_unchecked","initialized","into","into_inner_unchecked","is_completed","new","poll","try_call_once","try_from","try_into","try_into_inner","type_id","wait","Loop","RelaxStrategy","Spin","borrow","borrow","borrow_mut","borrow_mut","from","from","into","into","relax","relax","relax","try_from","try_from","try_into","try_into","type_id","type_id","RwLock","RwLockReadGuard","RwLockUpgradableGuard","RwLockWriteGuard","as_mut_ptr","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","default","deref","deref","deref","deref_mut","downgrade","downgrade","downgrade","downgrade_to_upgradeable","drop","drop","drop","fmt","fmt","fmt","fmt","fmt","fmt","fmt","force_read_decrement","force_write_unlock","from","from","from","from","from","from","get_mut","into","into","into","into","into_inner","is_locked","leak","leak","leak","lock_exclusive","lock_shared","lock_upgradable","new","read","reader_count","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_lock_exclusive","try_lock_shared","try_lock_upgradable","try_read","try_upgrade","try_upgrade","try_upgradeable_read","try_write","type_id","type_id","type_id","type_id","unlock_exclusive","unlock_shared","unlock_upgradable","upgrade","upgrade","upgradeable_read","write","writer_count"],"q":["spin","","","","","","","","","","","","","","","","","","spin::barrier","","","","","","","","","","","","","","","","","","","spin::lazy","","","","","","","","","","","","","","spin::lock_api","","","","","","spin::mutex","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","spin::mutex::spin","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","spin::once","","","","","","","","","","","","","","","","","","","","","","","","","","","","spin::relax","","","","","","","","","","","","","","","","","","","","spin::rwlock","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"d":["A primitive that synchronizes the execution of multiple …","A value which is initialized on the first access. See …","A primitive that synchronizes the execution of multiple …","","A primitive that provides lazy one-time initialization. …","","A lock that provides data access to either one writer or …","","A guard that provides immutable data access but can be …","A guard that provides mutable data access. See …","","Synchronization primitive allowing multiple threads to …","Synchronization primitives for lazy evaluation.","Spin synchronisation primitives, but compatible with …","Locks that have the same behaviour as a mutex.","Synchronization primitives for one-time evaluation.","Strategies that determine the behaviour of locks when …","A lock that provides data access to either one writer or …","A primitive that synchronizes the execution of multiple …","A <code>BarrierWaitResult</code> is returned by <code>wait</code> when all threads …","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Returns whether this thread from <code>wait</code> is the “leader …","Creates a new barrier that can block a given number of …","","","","","","","Blocks the current thread until all threads have …","A value which is initialized on the first access.","Retrieves a mutable pointer to the inner data.","","","Creates a new lazy value using <code>Default</code> as the initializing …","","","Forces the evaluation of this lazy value and returns a …","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Creates a new lazy value with the given initializing …","","","","A lock that provides mutually exclusive data access …","A guard that provides mutable data access (compatible with …","A lock that provides data access to either one writer or …","A guard that provides immutable data access (compatible …","A guard that provides immutable data access but can be …","A guard that provides mutable data access (compatible with …","A spin-based lock providing mutually exclusive access to …","A generic guard that will protect some data access and …","","","","","","","","","","","","","Force unlock this <code>Mutex</code>.","","Returns the argument unchanged.","","Returns the argument unchanged.","Returns a mutable reference to the underlying data.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Consumes this <code>Mutex</code> and unwraps the underlying data.","","Returns <code>true</code> if the lock is currently held.","Leak the lock guard, yielding a mutable reference to the …","Locks the <code>Mutex</code> and returns a guard that permits access to …","","Creates a new <code>Mutex</code> wrapping the supplied data.","A naïve spinning mutex.","","","","","","Try to lock this <code>Mutex</code>, returning a lock guard if …","","","","A spin lock providing mutually exclusive access to data.","A guard that provides mutable data access.","Returns a mutable pointer to the underlying data.","","","","","","","","The dropping of the MutexGuard will release the lock it …","","","","Force unlock this <code>SpinMutex</code>.","","Returns the argument unchanged.","","Returns the argument unchanged.","Returns a mutable reference to the underlying data.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Consumes this <code>SpinMutex</code> and unwraps the underlying data.","Returns <code>true</code> if the lock is currently held.","","Leak the lock guard, yielding a mutable reference to the …","","Locks the <code>SpinMutex</code> and returns a guard that permits …","Creates a new <code>SpinMutex</code> wrapping the supplied data.","","","","","","Try to lock this <code>SpinMutex</code>, returning a lock guard if …","","","","Initialization constant of <code>Once</code>.","A primitive that provides lazy one-time initialization.","Retrieve a pointer to the inner data.","","","Performs an initialization routine once and only once. The …","","","","Returns the argument unchanged.","","","Returns a reference to the inner value if the <code>Once</code> has …","Returns a mutable reference to the inner value if the <code>Once</code> …","Returns a mutable reference to the inner value","Returns a reference to the inner value on the unchecked …","Creates a new initialized <code>Once</code>.","Calls <code>U::from(self)</code>.","Returns a the inner value if the <code>Once</code> has been initialized.","Checks whether the value has been initialized.","Creates a new <code>Once</code>.","Like <code>Once::get</code>, but will spin if the <code>Once</code> is in the …","This method is similar to <code>call_once</code>, but allows the given …","","","Returns a the inner value if the <code>Once</code> has been initialized.","","Spins until the <code>Once</code> contains a value.","A strategy that rapidly spins, without telling the CPU to …","A trait implemented by spinning relax strategies.","A strategy that rapidly spins while informing the CPU that …","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Perform the relaxing operation during a period of …","","","","","","","","","A lock that provides data access to either one writer or …","A guard that provides immutable data access.","A guard that provides immutable data access but can be …","A guard that provides mutable data access.","Returns a mutable pointer to the underying data.","","","","","","","","","","","","","","","Downgrades the writable lock guard to a readable, shared …","Downgrades the upgradeable lock guard to a readable, …","Downgrades the writable lock guard to an upgradable, …","","","","","","","","","","","Force decrement the reader count.","Force unlock exclusive write access.","","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns a mutable reference to the underlying data.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Consumes this <code>RwLock</code>, returning the underlying data.","","Leak the lock guard, yielding a reference to the …","Leak the lock guard, yielding a mutable reference to the …","Leak the lock guard, yielding a reference to the …","","","","Creates a new spinlock wrapping the supplied data.","Locks this rwlock with shared read access, blocking the …","Return the number of readers that currently hold the lock …","","","","","","","","","","","","Attempt to acquire this lock with shared read access.","","Tries to upgrade an upgradeable lock guard to a writable …","Tries to obtain an upgradeable lock guard.","Attempt to lock this rwlock with exclusive write access.","","","","","","","","","Upgrades an upgradeable lock guard to a writable lock …","Obtain a readable lock guard that can later be upgraded to …","Lock this rwlock with exclusive write access, blocking the …","Return the number of writers that currently hold the lock."],"i":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,4,1,4,1,4,1,4,1,1,4,4,1,4,1,4,1,4,0,8,8,8,8,8,8,8,8,8,8,8,8,8,0,0,0,0,0,0,0,0,0,0,15,16,15,16,15,16,16,15,16,16,15,15,15,15,16,15,15,16,15,15,15,16,15,15,15,0,15,16,15,16,15,15,15,16,15,0,0,20,20,21,20,21,20,21,21,21,20,21,21,20,20,20,20,21,20,20,21,20,20,20,21,20,20,20,20,21,20,21,20,20,20,21,20,22,0,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,0,0,0,27,28,27,28,27,28,27,28,7,27,28,27,28,27,28,27,28,0,0,0,0,23,23,24,25,26,23,24,25,26,23,24,25,26,25,23,25,26,25,24,25,26,23,24,24,25,25,26,26,23,23,23,23,23,24,25,26,23,23,24,25,26,23,23,24,25,26,23,23,23,23,23,23,23,24,25,26,23,24,25,26,23,23,23,23,23,26,23,23,23,24,25,26,23,23,23,23,26,23,23,23],"f":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[1,2],[3,4],[[],5],[[],5],[[],5],[[],5],[[],6],[[],6],[[[4,[7]]],1],0,[8],[[]],[[]],[[],[[8,[9]]]],[[[8,[10,7]]]],[[[8,[11]],12],13],[[[8,[10,7]]]],[[]],[[]],[[],8],[[],5],[[],5],[[],6],0,0,0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[],[[15,[[0,[14,9]]]]]],[[[16,[14]]]],[[[16,[14]]]],[[[15,[[0,[14,11]]]],12],13],[[[16,[[0,[14,17]]]],12],13],[[[16,[[0,[14,11]]]],12],13],[[[15,[14]]]],[[],15],[[]],[18],[[]],[[[15,[14]]]],[[]],[[]],[15],[[[15,[7]]],2],[[[15,[14]]],2],[[[16,[14]]]],[[[15,[14,7]]],[[16,[14]]]],[[[15,[7]]]],[[],15],0,[[],5],[[],5],[[],5],[[],5],[[[15,[7]]],2],[[[15,[14]]],[[19,[[16,[14]]]]]],[[],6],[[],6],[[[15,[7]]]],0,0,[20],[[]],[[]],[[]],[[]],[[],[[20,[[0,[14,9]]]]]],[[[21,[14]]]],[[[21,[14]]]],[[[21,[14]]]],[[[20,[[0,[14,11]]]],12],13],[[[21,[[0,[14,17]]]],12],13],[[[21,[[0,[14,11]]]],12],13],[[[20,[14]]]],[18],[[]],[[],20],[[]],[[[20,[14]]]],[[]],[[]],[20],[[[20,[14]]],2],[[[20,[7]]],2],[[[21,[14]]]],[[[20,[7]]]],[[[20,[14,7]]],[[21,[14]]]],[[],20],[[],5],[[],5],[[],5],[[],5],[[[20,[7]]],2],[[[20,[14]]],[[19,[[21,[14]]]]]],[[],6],[[],6],[[[20,[7]]]],0,0,[22],[[]],[[]],[[[22,[7]],10]],[[],22],[22],[[[22,[11]],12],13],[[]],[18],[[],22],[22,19],[22,19],[22],[22],[[],22],[[]],[22],[22,2],[[],22],[[[22,[7]]],19],[[[22,[7]],10],5],[[],5],[[],5],[22,19],[[],6],[[[22,[7]]]],0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],5],[[],5],[[],5],[[],5],[[],6],[[],6],0,0,0,0,[23],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],[[23,[[0,[14,9]]]]]],[[[24,[14]]]],[[[25,[14]]]],[[[26,[14]]]],[[[25,[14]]]],[[[23,[7]]]],[[[25,[14]]],[[24,[14]]]],[[[26,[14]]],[[24,[14]]]],[[[25,[14]]],[[26,[14]]]],[[[24,[14]]]],[[[25,[14]]]],[[[26,[14]]]],[[[23,[[0,[14,11]]]],12],13],[[[24,[[0,[14,17]]]],12],13],[[[24,[[0,[14,11]]]],12],13],[[[25,[[0,[14,17]]]],12],13],[[[25,[[0,[14,11]]]],12],13],[[[26,[[0,[14,17]]]],12],13],[[[26,[[0,[14,11]]]],12],13],[[[23,[14]]]],[[[23,[14]]]],[[],23],[[]],[18],[[]],[[]],[[]],[[[23,[14]]]],[[]],[[]],[[]],[[]],[23],[[[23,[7]]],2],[[[24,[14]]]],[[[25,[14]]]],[[[26,[14]]]],[[[23,[7]]]],[[[23,[7]]]],[[[23,[7]]]],[[],23],[[[23,[14,7]]],[[24,[14]]]],[[[23,[14]]],3],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[[23,[7]]],2],[[[23,[7]]],2],[[[23,[7]]],2],[[[23,[14]]],[[19,[[24,[14]]]]]],[[[23,[7]]],2],[[[26,[14]]],[[5,[[25,[14]],[26,[14]]]]]],[[[23,[14]]],[[19,[[26,[14]]]]]],[[[23,[14]]],[[19,[[25,[14]]]]]],[[],6],[[],6],[[],6],[[],6],[[[23,[7]]]],[[[23,[7]]]],[[[23,[7]]]],[[[23,[7]]]],[[[26,[14,7]]],[[25,[14,7]]]],[[[23,[14,7]]],[[26,[14,7]]]],[[[23,[14,7]]],[[25,[14,7]]]],[[[23,[14]]],3]],"p":[[3,"BarrierWaitResult"],[15,"bool"],[15,"usize"],[3,"Barrier"],[4,"Result"],[3,"TypeId"],[8,"RelaxStrategy"],[3,"Lazy"],[8,"Default"],[8,"FnOnce"],[8,"Debug"],[3,"Formatter"],[6,"Result"],[8,"Sized"],[3,"Mutex"],[3,"MutexGuard"],[8,"Display"],[15,"never"],[4,"Option"],[3,"SpinMutex"],[3,"SpinMutexGuard"],[3,"Once"],[3,"RwLock"],[3,"RwLockReadGuard"],[3,"RwLockWriteGuard"],[3,"RwLockUpgradableGuard"],[3,"Spin"],[3,"Loop"]]},\
"sync":{"doc":"同步互斥模块","t":[3,3,8,3,3,3,3,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,11,11,11,11,11,11,11,10,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,10,11,11,11,11],"n":["Condvar","IntrMaskingInfo","Mutex","MutexBlocking","Semaphore","UPIntrFreeCell","UPIntrRefMut","UPSafeCellRaw","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","deref","deref_mut","down","drop","enter","exclusive_access","exclusive_session","exit","from","from","from","from","from","from","from","get_mut","inner","inner","into","into","into","into","into","into","into","lock","lock","new","new","new","new","new","new","signal","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","unlock","unlock","up","wait_no_sched","wait_with_mutex"],"q":["sync","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"d":["Condvar 条件变量","中断屏蔽信息","Mutex trait互斥","MutexBlocking","Semaphore信号","A mutable memory location with dynamically checked borrow …","A wrapper type for a mutably borrowed value from a RefCell","interior mutability 内部可变性","","","","","","","","","","","","","","","","","…","","","Panic if the data has been borrowed.","exclusive_session","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","UPIntrFreeCell","UPIntrFreeCell","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","tid 表示的线程试图获取锁，并返回结果","","new","new","new","","","","唤醒某个阻塞在当前条件变量上的线程","","","","","","","","","","","","","","","","","","","","","","…","","…","将当前线程阻塞在条件变量上","从 mutex …"],"i":[0,0,0,0,0,0,0,0,9,8,2,7,5,6,1,9,8,2,7,5,6,1,1,1,2,1,5,6,6,5,9,8,2,7,5,6,1,7,9,2,9,8,2,7,5,6,1,14,8,9,8,2,7,5,6,9,9,8,2,7,5,6,1,9,8,2,7,5,6,1,9,8,2,7,5,6,1,14,8,2,9,9],"f":[0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[1],[1],[[2,3],4],[1],[5],[6,1],[6],[5],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[7],0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[3,4],[[8,3],4],[[],9],[[],8],[10,2],[[],7],[[],5],[[],6],[9,[[11,[3]]]],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],[[11,[3]]]],[8,[[11,[3]]]],[2,[[11,[3]]]],[[9,3],4],[[9,3,[15,[14]]]]],"p":[[3,"UPIntrRefMut"],[3,"Semaphore"],[3,"ThreadId"],[15,"bool"],[3,"IntrMaskingInfo"],[3,"UPIntrFreeCell"],[3,"UPSafeCellRaw"],[3,"MutexBlocking"],[3,"Condvar"],[15,"usize"],[4,"Option"],[4,"Result"],[3,"TypeId"],[8,"Mutex"],[3,"Arc"]]},\
"void":{"doc":"Void","t":[8,8,4,11,11,11,11,11,11,11,11,11,11,11,11,5,10,10],"n":["ResultVoidErrExt","ResultVoidExt","Void","borrow","borrow_mut","clone","eq","fmt","fmt","from","into","partial_cmp","try_from","try_into","type_id","unreachable","void_unwrap","void_unwrap_err"],"q":["void","","","","","","","","","","","","","","","","",""],"d":["Extensions to <code>Result&lt;Void, E&gt;</code>","Extensions to <code>Result&lt;T, Void&gt;</code>","The empty type for cases which can’t occur.","","","","","","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","","","","","A safe version of <code>intrinsincs::unreachable</code>.","Get the value out of a wrapper.","Get the error out of a wrapper."],"i":[0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,0,10,11],"f":[0,0,0,[[]],[[]],[1,1],[1,2],[[1,3],4],[[1,3],4],[[]],[[]],[1,[[6,[5]]]],[[],7],[[],7],[[],8],[1,9],[[]],[[]]],"p":[[4,"Void"],[15,"bool"],[3,"Formatter"],[6,"Result"],[4,"Ordering"],[4,"Option"],[4,"Result"],[3,"TypeId"],[15,"never"],[8,"ResultVoidExt"],[8,"ResultVoidErrExt"]]}\
}');
if (typeof window !== 'undefined' && window.initSearch) {window.initSearch(searchIndex)};
if (typeof exports !== 'undefined') {exports.searchIndex = searchIndex};
